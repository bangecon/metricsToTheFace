<<<<<<< HEAD
pass(random_praise())
}
fail(random_encouragement())
})
grader(mock_this_exercise(
.user_code = {
bwght.lmX <- lm(bwghtlbs ~ cigs + faminc + I(faminc^2), data = bwght)
newdata <- data.frame(t(sapply(bwght.lmX$model, median)))
marginaleffects(bwght.lmX, newdata = newdata, by = TRUE)
},
setup_exercise = {
library(marginaleffects)
library(stargazer)
bwght <- wooldridge::bwght
},
.solution_code = {
bwght.lmX <- lm(bwghtlbs ~ cigs + faminc + I(faminc^2), data = bwght)
newdata <- data.frame(t(sapply(bwght.lmX$model, median)))
marginaleffects(bwght.lmX, newdata = newdata, by = TRUE)
}
))
bwght <- wooldridge::bwght
bwght.lm1 <- lm(bwght ~ cigs + faminc, data = bwght)
bwght.lm2 <- lm(bwghtlbs ~ cigs + faminc, data = bwght)
bwght.lm3 <- lm(bwght ~ packs + faminc, data = bwght)
unlist(list(
marginaleffects(bwght.lm1, slope = 'eyex', by = TRUE),
marginaleffects(bwght.lm1, slope = 'dyex', by = TRUE)))[[1]]
unlist(list(
marginaleffects(bwght.lm1, slope = 'eyex', by = TRUE),
marginaleffects(bwght.lm1, slope = 'dyex', by = TRUE))[[1]])
unlist(list(
marginaleffects(bwght.lm1, slope = 'eyex', by = TRUE),
marginaleffects(bwght.lm1, slope = 'dyex', by = TRUE))[[2]])
# Levels Model
hprice1 <- wooldridge::hprice1
hprice.lm1 <- lm(price ~ lotsize + sqrft + bdrms, data = hprice1)
ureg1 <- lm(resid(hprice.lm1) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF1 <- summary(ureg1)$fstatistic
bpF1p <- pf(bpF1[1], bpF1[2], bpF1[3], lower.tail = FALSE)
bpLM1 <- nrow(ureg1$model)*summary(ureg1)$r.squared
bp1 <- bptest(hprice.lm1)
library(car)
library(lmtest)
library(sandwich)
# Levels Model
hprice1 <- wooldridge::hprice1
hprice.lm1 <- lm(price ~ lotsize + sqrft + bdrms, data = hprice1)
ureg1 <- lm(resid(hprice.lm1) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF1 <- summary(ureg1)$fstatistic
bpF1p <- pf(bpF1[1], bpF1[2], bpF1[3], lower.tail = FALSE)
bpLM1 <- nrow(ureg1$model)*summary(ureg1)$r.squared
bp1 <- bptest(hprice.lm1)
# Log Model
hprice.lm2 <- lm(log(price) ~ lotsize + sqrft + bdrms, data = hprice1)
ureg2 <- lm(resid(hprice.lm2) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF2 <- summary(ureg2)$fstatistic
bpF2p <- pf(bpF2[1], bpF2[2], bpF2[3], lower.tail = FALSE)
bpLM2 <- nrow(ureg2$model)*summary(ureg2)$r.squared
bp2 <- bptest(hprice.lm2)
# Table
library(car)
library(lmtest)
library(sandwich)
hprice1 <- wooldridge::hprice1
hprice.lm1 <- lm(price ~ lotsize + sqrft + bdrms, data = hprice1)
ureg1 <- lm(resid(hprice.lm1) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF1 <- summary(ureg1)$fstatistic
bpF1p <- pf(bpF1[1], bpF1[2], bpF1[3], lower.tail = FALSE)
bpLM1 <- nrow(ureg1$model)*summary(ureg1)$r.squared
bp1 <- bptest(hprice.lm1)
bp1
unlist(bp1)
bp1$statistic
bp1$p.value
c(bpF1, bpFp, bpLM1, bp1)
c(bpF1, bpF1p, bpLM1, bp1)
bpF1
hprice1 <- wooldridge::hprice1
hprice.lm1 <- lm(price ~ lotsize + sqrft + bdrms, data = hprice1)
ureg1 <- lm(resid(hprice.lm1) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF1 <- summary(ureg1)$fstatistic$value
bpF1 <- summary(ureg1)$fstatistic$value
summary(ureg)
hprice1 <- wooldridge::hprice1
hprice.lm1 <- lm(price ~ lotsize + sqrft + bdrms, data = hprice1)
ureg1 <- lm(resid(hprice.lm1) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF1 <- summary(ureg1)$fstatistic$value
summary(ureg1)
s.ureg1 <- summary(ureg1)
s.ureg1$fstatistic
summary(ureg1)$fstatistic
hprice1 <- wooldridge::hprice1
hprice.lm1 <- lm(price ~ lotsize + sqrft + bdrms, data = hprice1)
ureg1 <- lm(resid(hprice.lm1) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF1 <- summary(ureg1)$fstatistic$value
summary(ureg1)
summary(ureg1)
summary(ureg1)$fstatistic
summary(ureg1)$fstatistic$value
summary(ureg1)$fstatistic[1]
bpF1 <- summary(ureg1)$fstatistic
bpF1v <- bpF1$value
bpF1 <- summary(ureg1)$fstatistic
bpF1v <- bpF1[1]
bpF1v
hprice1 <- wooldridge::hprice1
hprice.lm1 <- lm(price ~ lotsize + sqrft + bdrms, data = hprice1)
ureg1 <- lm(resid(hprice.lm1) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF1 <- summary(ureg1)$fstatistic
bpF1v <- bpF1$value
hprice1 <- wooldridge::hprice1
hprice.lm1 <- lm(price ~ lotsize + sqrft + bdrms, data = hprice1)
ureg1 <- lm(resid(hprice.lm1) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF1 <- summary(ureg1)$fstatistic
bpF1v <- bpF1[1]
bpF1p <- pf(bpF1, bpF1[2], bpF1[3], lower.tail = FALSE)
bpLM1 <- nrow(ureg1$model)*summary(ureg1)$r.squared
=======
>>>>>>> 2fa5457ca75a974a7f9646b44991336a41796509
bp1 <- bptest(hprice.lm1)
c(bpF1v, bpF1p, bpLM1, bp1)
bpF1p
?pf
pf(bpF1v, bpF1[2], bpF1[3], lower.tail = FALSE)
c(bpF1[1], bpF1p)
hprice1 <- wooldridge::hprice1
hprice.lm1 <- lm(price ~ lotsize + sqrft + bdrms, data = hprice1)
ureg1 <- lm(resid(hprice.lm1) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF1 <- summary(ureg1)$fstatistic
bpF1p <- pf(bpF1v[1], bpF1[2], bpF1[3], lower.tail = FALSE)
bpLM1 <- nrow(ureg1$model)*summary(ureg1)$r.squared
bp1 <- bptest(hprice.lm1)
c(bpF1[1], bpF1p)
c(bpF1[1], bpF1p, bpLM1)
c(bpF1[1], bpF1p, bpLM1, bp1)
c(bpF1[1], bpF1p, bpLM1, bp1[1], bp1[4])
c(bpF1[1], bpF1p, bpLM1, bp1[[1]], bp1[[4]])
hprice1 <- wooldridge::hprice1
hprice.lm1 <- lm(price ~ lotsize + sqrft + bdrms, data = hprice1)
ureg1 <- lm(resid(hprice.lm1) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF1 <- summary(ureg1)$fstatistic
bpF1p <- pf(bpF1v[1], bpF1[2], bpF1[3], lower.tail = FALSE)
bpLM1 <- nrow(ureg1$model)*summary(ureg1)$r.squared
bp1 <- bptest(hprice.lm1)
c(bpF1[1], bpF1p, bpLM1, bp1[[1]], bp1[[4]])
hprice.lm2 <- lm(log(price) ~ lotsize + sqrft + bdrms, data = hprice1)
ureg2 <- lm(resid(hprice.lm2) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF2 <- summary(ureg2)$fstatistic
bpF2p <- pf(bpF2[1], bpF2[2], bpF2[3], lower.tail = FALSE)
bpLM2 <- nrow(ureg2$model)*summary(ureg2)$r.squared
bp2 <- bptest(hprice.lm2)
c(bpF2[1], bpF2p, bpLM2, bp2[[1]], bp2[[4]])
library(car)
library(lmtest)
library(sandwich)
hprice1 <- wooldridge::hprice1
hprice.lm1 <- lm(price ~ lotsize + sqrft + bdrms, data = hprice1)
ureg1 <- lm(resid(hprice.lm1) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF1 <- summary(ureg1)$fstatistic
bpF1p <- pf(bpF1[1], bpF1[2], bpF1[3], lower.tail = FALSE)
bpLM1 <- nrow(ureg1$model)*summary(ureg1)$r.squared
bp1 <- bptest(hprice.lm1)
# `summary.lm()` stores the `fstatistic` for the regression as well as the `r.squared` as objects.
# The `fstatistic` from a `summary.lm()` object has three values: (1) the F-stat itself, (2) the numerator df, and (3) the denominator df.
# Use `pf(F, df1, df2)` to calculate the p-value for F using the three values from `fstatisitc`.
hprice.lm2 <- lm(log(price) ~ lotsize + sqrft + bdrms, data = hprice1)
ureg2 <- lm(resid(hprice.lm2) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF2 <- summary(ureg2)$fstatistic
bpF2p <- pf(bpF2[1], bpF2[2], bpF2[3], lower.tail = FALSE)
bpLM2 <- nrow(ureg2$model)*summary(ureg2)$r.squared
bp2 <- bptest(hprice.lm2)
c(bpF2[1], bpF2p, bpLM2, bp2[[1]], bp2[[4]])
library(car)
library(lmtest)
library(sandwich)
library(stargazer)
hprice1 <- wooldridge::hprice1
hprice.lm1 <- lm(price ~ lotsize + sqrft + bdrms, data = hprice1)
hprice.lm2 <- lm(log(price) ~ lotsize + sqrft + bdrms, data = hprice1)
ureg1w <-
lm(resid(hprice.lm1) ~ fitted(hprice.lm1) + I(fitted(hprice.lm1) ^ 2))
whiteF1 <- summary(ureg1w)$fstatistic
whiteF1p <- pf(whiteF1[1], whiteF1[2], whiteF1[3], lower.tail = FALSE)
white1 <-
bptest(hprice.lm1, ~ fitted(hprice.lm1) + I(fitted(hprice.lm1) ^ 2))
c(whiteF1[1], whiteF1p, white1[[1]], white1[[4]])
bp1
length(bp1)
unlist(bp1)
unlist(white1)
library(stargazer)
stargazer(hprice.lm1, hprice.lm2, type = 'text', digits = 4,
add.lines = list(
c('Breusch-Pagan F', round(bpF1[1], 4), round(bpF2[1], 4)),
c('Pr(F>BP)', round(bpF1p, 4), round(bpF2p, 4)),
c('Breusch-Pagan LM', round(bp1$statistic, 4), round(bp2$statistic, 4)),
c('Pr(Chi-Sq>LM)', round(bp1$p.value, 4), round(bp2$p.value, 4)),
c('White F', round(whiteF1[1], 4), round(bpF2[1], 4)),
c('Pr(F>BP)', round(bpF1p, 4), round(whiteF2p, 4)),
c('White LM', round(white1$statistic, 4), round(white2$statistic, 4)),
c('Pr(Chi-Sq>LM)', round(white1$p.value, 4), round(white2$p.value, 4))
)
)
library(car)
library(lmtest)
library(sandwich)
hprice1 <- wooldridge::hprice1
# Levels
## Breusch-Pagan
hprice.lm1 <- lm(price ~ lotsize + sqrft + bdrms, data = hprice1)
ureg1 <- lm(resid(hprice.lm1) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF1 <- summary(ureg1)$fstatistic
bpF1p <- pf(bpF1[1], bpF1[2], bpF1[3], lower.tail = FALSE)
bpLM1 <- nrow(ureg1$model)*summary(ureg1)$r.squared
bp1 <- bptest(hprice.lm1)
c(bpF1[1], bpF1p, bpLM1, bp1[[1]], bp1[[4]])
## White
ureg1w <-
lm(resid(hprice.lm1) ~ fitted(hprice.lm1) + I(fitted(hprice.lm1) ^ 2))
whiteF1 <- summary(ureg1w)$fstatistic
whiteF1p <- pf(whiteF1[1], whiteF1[2], whiteF1[3], lower.tail = FALSE)
white1 <-
bptest(hprice.lm1, ~ fitted(hprice.lm1) + I(fitted(hprice.lm1) ^ 2))
c(whiteF1[1], whiteF1p, white1[[1]], white1[[4]])
# Logs
## Breusch-Pagan
hprice.lm2 <- lm(log(price) ~ lotsize + sqrft + bdrms, data = hprice1)
ureg2 <- lm(resid(hprice.lm2) ^ 2 ~ lotsize + sqrft + bdrms, data = hprice1)
bpF2 <- summary(ureg2)$fstatistic
bpF2p <- pf(bpF2[1], bpF2[2], bpF2[3], lower.tail = FALSE)
bpLM2 <- nrow(ureg2$model)*summary(ureg2)$r.squared
bp2 <- bptest(hprice.lm2)
c(bpF2[1], bpF2p, bpLM2, bp2[[1]], bp2[[4]])
## White
ureg2w <-
lm(resid(hprice.lm2) ~ fitted(hprice.lm2) + I(fitted(hprice.lm2) ^ 2))
whiteF2 <- summary(ureg2w)$fstatistic
whiteF2p <- pf(whiteF2[1], whiteF2[2], whiteF2[3], lower.tail = FALSE)
white2 <-
bptest(hprice.lm2, ~ fitted(hprice.lm2) + I(fitted(hprice.lm2) ^ 2))
c(whiteF2[1], whiteF2p, white2[[1]], white2[[4]])
library(stargazer)
stargazer(hprice.lm1, hprice.lm2, type = 'text', digits = 4,
add.lines = list(
c('Breusch-Pagan F', round(bpF1[1], 4), round(bpF2[1], 4)),
c('Pr(F>BP)', round(bpF1p, 4), round(bpF2p, 4)),
c('Breusch-Pagan LM', round(bp1$statistic, 4), round(bp2$statistic, 4)),
c('Pr(Chi-Sq>LM)', round(bp1$p.value, 4), round(bp2$p.value, 4)),
c('White F', round(whiteF1[1], 4), round(bpF2[1], 4)),
c('Pr(F>BP)', round(bpF1p, 4), round(whiteF2p, 4)),
c('White LM', round(white1$statistic, 4), round(white2$statistic, 4)),
c('Pr(Chi-Sq>LM)', round(white1$p.value, 4), round(white2$p.value, 4))
)
)
unname(stargazer(hprice.lm1, hprice.lm2, type = 'text', digits = 4,
add.lines = list(
c('Breusch-Pagan F', round(bpF1[1], 4), round(bpF2[1], 4)),
c('Pr(F>BP)', round(bpF1p, 4), round(bpF2p, 4)),
c('Breusch-Pagan LM', round(bp1$statistic, 4), round(bp2$statistic, 4)),
c('Pr(Chi-Sq>LM)', round(bp1$p.value, 4), round(bp2$p.value, 4)),
c('White F', round(whiteF1[1], 4), round(bpF2[1], 4)),
c('Pr(F>BP)', round(bpF1p, 4), round(whiteF2p, 4)),
c('White LM', round(white1$statistic, 4), round(white2$statistic, 4)),
c('Pr(Chi-Sq>LM)', round(white1$p.value, 4), round(white2$p.value, 4))
)
))
unlist(stargazer(hprice.lm1, hprice.lm2, type = 'text', digits = 4,
add.lines = list(
c('Breusch-Pagan F', round(bpF1[1], 4), round(bpF2[1], 4)),
c('Pr(F>BP)', round(bpF1p, 4), round(bpF2p, 4)),
c('Breusch-Pagan LM', round(bp1$statistic, 4), round(bp2$statistic, 4)),
c('Pr(Chi-Sq>LM)', round(bp1$p.value, 4), round(bp2$p.value, 4)),
c('White F', round(whiteF1[1], 4), round(bpF2[1], 4)),
c('Pr(F>BP)', round(bpF1p, 4), round(whiteF2p, 4)),
c('White LM', round(white1$statistic, 4), round(white2$statistic, 4)),
c('Pr(Chi-Sq>LM)', round(white1$p.value, 4), round(white2$p.value, 4))
)
))
library(stargazer)
k401ksubs <- wooldridge::k401ksubs
nettfa.lm1 <- lm(nettfa ~ inc, data = k401ksubs, subset = (fsize == 1))
nettfa.lm2 <- lm(nettfa ~ inc + male + e401k + I((age - 25)^2), data = k401ksubs, subset = (fsize == 1))
length(resid(nettfa.lm2))
ureg1 <- lm(resid(nettfa.lm2) ^ 2 ~ inc + male + e401k + I((age - 25)^2), data = subset(k401ksubs, fsize == 1))
bpF1 <- summary(ureg1)$fstatistic
bpF1p <- pf(bpF1[1], bpF1[2], bpF1[3], lower.tail = FALSE)
bp1 <- bptest(nettfa.lm2)
library(lmtest)
ureg1 <- lm(resid(nettfa.lm2) ^ 2 ~ inc + male + e401k + I((age - 25)^2), data = subset(k401ksubs, fsize == 1))
bpF1 <- summary(ureg1)$fstatistic
bpF1p <- pf(bpF1[1], bpF1[2], bpF1[3], lower.tail = FALSE)
bp1 <- bptest(nettfa.lm2)
library(lmtest)
ureg1 <- lm(resid(nettfa.lm2) ^ 2 ~ inc + male + e401k + I((age - 25)^2), data = subset(k401ksubs, fsize == 1))
bpF1 <- summary(ureg1)$fstatistic
bpF1p <- pf(bpF1[1], bpF1[2], bpF1[3], lower.tail = FALSE)
bp1 <- bptest(nettfa.lm2)
library(lmtest)
ureg1 <- lm(resid(nettfa.lm2) ^ 2 ~ inc + male + e401k + I((age - 25)^2), data = subset(k401ksubs, fsize == 1))
bpF1 <- summary(ureg1)$fstatistic
bpF1p <- pf(bpF1[1], bpF1[2], bpF1[3], lower.tail = FALSE)
bp1 <- bptest(nettfa.lm2)
list(c(bpF1, bpF1p), bp1)
bpF1
ureg1w  <- lm(resid(nettfa.lm2) ~ fitted(nettfa.lm2) + I(fitted(nettfa.lm2)^2))
whiteF  <- summary(ureg1w)$fstatistic
whiteFp <- pf(whiteF[1], whiteF[2], whiteF[3], lower.tail = FALSE)
white1 <- bptest(nettfa.lm2, ~ fitted(nettfa.lm2) + I(fitted(nettfa.lm2)^2),
data = subset(k401ksubs, fsize == 1))
white1
wage.lm14w <-
lm(
log(wage) ~ I(married * (1 - female)) + I(married * female) +
I((1 - married) * female) + educ + exper + I(exper ^ 2) + tenure +
I(tenure ^ 2), data = wage1, weights = 1/tenure
)
wage1 <- wooldridge::wage1
wage.lm14 <-
lm(
log(wage) ~ I(married * (1 - female)) + I(married * female) +
I((1 - married) * female) + educ + exper + I(exper ^ 2) + tenure +
I(tenure ^ 2), data = wage1
)
wage.lm14w <-
lm(
log(wage) ~ I(married * (1 - female)) + I(married * female) +
I((1 - married) * female) + educ + exper + I(exper ^ 2) + tenure +
I(tenure ^ 2), data = wage1, weights = 1/tenure
)
wage.lm14w <-
lm(
log(wage) ~ I(married * (1 - female)) + I(married * female) +
I((1 - married) * female) + educ + exper + I(exper ^ 2) + tenure +
I(tenure ^ 2), data = wage1, weights = 1/exp(tenure)
)
summary(wage.lm14w)
library(stargazer)
stargazer(
wage.lm14, wage.lm14, wage.lm14, wage.lm14w, wage.fgls, type = 'text',
se = list(sqrt(diag(vcovHC(wage.lm14, "const"))),
sqrt(diag(vcovHC(wage.lm14, "HC1"))),
sqrt(diag(vcovHC(wage.lm14, "HC3"))),
sqrt(diag(vcovHC(wage.lm14w, "const"))),
sqrt(diag(vcovHC(wage.fgls, "const")))
),
column.labels = c("OLS", "HC1", "HC3", "WLS", "FGLS"), FGLS
notes = c("The coefficients for the first three columns are OLS coefficients with OLS, HC1, and HC3 standard errors, respectively.
library(stargazer)
stargazer(
wage.lm14, wage.lm14, wage.lm14, wage.lm14w, wage.fgls, type = 'text',
se = list(sqrt(diag(vcovHC(wage.lm14, "const"))),
sqrt(diag(vcovHC(wage.lm14, "HC1"))),
sqrt(diag(vcovHC(wage.lm14, "HC3"))),
sqrt(diag(vcovHC(wage.lm14w, "const"))),
sqrt(diag(vcovHC(wage.fgls, "const")))
),
column.labels = c("OLS", "HC1", "HC3", "WLS", "FGLS"),
notes = c("The coefficients for the first three columns are OLS coefficients with OLS, HC1, and HC3 standard errors, respectively.
Column four presents WLS results with weights equal to 1/tenure. ")
)
wage.lm14 <-
lm(
log(wage) ~ I(married * (1 - female)) + I(married * female) +
I((1 - married) * female) + educ + exper + I(exper ^ 2) + tenure +
I(tenure ^ 2), data = wage1
)
varreg <-
lm(
log(wage.lm14$residuals^2) ~ I(married * (1 - female)) + I(married * female) +
I((1 - married) * female) + educ + exper + I(exper ^ 2) + tenure +
I(tenure ^ 2), data = wage1
)
wage.fgls <-
lm(
log(wage) ~ I(married * (1 - female)) + I(married * female) +
I((1 - married) * female) + educ + exper + I(exper ^ 2) + tenure +
I(tenure ^ 2), data = wage1, weights = 1/exp(fitted(varreg))
)
summary(wage.fgls)
library(stargazer)
stargazer(
wage.lm14, wage.lm14, wage.lm14, wage.lm14w, wage.fgls, type = 'text',
se = list(sqrt(diag(vcovHC(wage.lm14, "const"))),
sqrt(diag(vcovHC(wage.lm14, "HC1"))),
sqrt(diag(vcovHC(wage.lm14, "HC3"))),
sqrt(diag(vcovHC(wage.lm14w, "const"))),
sqrt(diag(vcovHC(wage.fgls, "const")))
),
column.labels = c("OLS", "HC1", "HC3", "WLS", "FGLS"),
notes = c("The coefficients for the first three columns are OLS coefficients with OLS, HC1, and HC3 standard errors, respectively.
Column four presents WLS results with weights equal to 1/tenure. ")
)
library(sandwich)
library(stargazer)
stargazer(
wage.lm14, wage.lm14, wage.lm14, wage.lm14w, wage.fgls, type = 'text',
se = list(sqrt(diag(vcovHC(wage.lm14, "const"))),
sqrt(diag(vcovHC(wage.lm14, "HC1"))),
sqrt(diag(vcovHC(wage.lm14, "HC3"))),
sqrt(diag(vcovHC(wage.lm14w, "const"))),
sqrt(diag(vcovHC(wage.fgls, "const")))
),
column.labels = c("OLS", "HC1", "HC3", "WLS", "FGLS"),
notes = c("The coefficients for the first three columns are OLS coefficients with OLS, HC1, and HC3 standard errors, respectively.
Column four presents WLS results with weights equal to 1/tenure. ")
)
library(stargazer)
stargazer(
wage.lm14, wage.lm14, wage.lm14, wage.lm14w, wage.fgls, type = 'text',
se = list(sqrt(diag(vcovHC(wage.lm14, "const"))),
sqrt(diag(vcovHC(wage.lm14, "HC1"))),
sqrt(diag(vcovHC(wage.lm14, "HC3"))),
sqrt(diag(vcovHC(wage.lm14w, "const"))),
sqrt(diag(vcovHC(wage.fgls, "const")))
),
column.labels = c("OLS", "HC1", "HC3", "WLS", "FGLS"))
k401ksubs <- wooldridge::k401ksubs
nettfa.lm2 <- lm(nettfa ~ inc + male + e401k + I((age - 25)^2), data = k401ksubs, subset = (fsize == 1))
nettfa.wls <- lm(
nettfa ~ inc + male + e401k + I((age - 25) ^ 2),
data = subset(k401ksubs, fsize == 1),
weights = 1 / inc
)
varreg <- lm(
log(nettfa.lm2$residuals ^ 2) ~ inc + male + e401k + I((age - 25) ^ 2),
data = subset(k401ksubs, fsize == 1),
subset = (fsize == 1)
)
nettfa.fgls <- lm(
nettfa ~ inc + male + e401k + I((age - 25) ^ 2),
data = subset(k401ksubs, fsize == 1),
weights = 1 / exp(fitted(varreg))
)
nettfa.wls <- lm(
nettfa ~ inc + male + e401k + I((age - 25) ^ 2),
data = subset(k401ksubs, fsize == 1),
weights = 1 / inc
)
varreg <- lm(
log(nettfa.lm2$residuals ^ 2) ~ inc + male + e401k + I((age - 25) ^ 2),
data = subset(k401ksubs, fsize == 1),
subset = (fsize == 1)
)
nettfa.fgls <- lm(
nettfa ~ inc + male + e401k + I((age - 25) ^ 2),
data = subset(k401ksubs, fsize == 1),
weights = 1 / exp(fitted(varreg))
)
list(summary(nettfa.wls), summary(nettfa.fgls))
help("linear model")
help("regression")
??regression
help.search("linear models")
??"linear models"
<<<<<<< HEAD
pak::pkg_install('bangecon/metricsToTheface')
pak::pkg_install('bangecon/metricsToTheface')
library(ggdag)
library(ggplot2)
WageDag1 <- tidy_dagitty(dagify(
Wage ~ Educ,
exposure = "Educ",
outcome = "Wage"
))
WageDag1 <-
dag_label(WageDag1,
labels = c("Educ" = "Exposure",
"Wage" = "Outcome"))
ggdag(WageDag1) + theme_dag(legend.position = 'none') + geom_dag_label_repel(aes(label = label))
WageDag2 <-
tidy_dagitty(
dagify(
Wage ~ Educ + Exper,
Educ ~ Exper,
exposure = "Educ",
outcome = "Wage"
)
)
WageDag2 <-
dag_label(WageDag2,
labels = c(
"Educ" = "Exposure",
"Wage" = "Outcome",
"Exper" = ifelse(
is_confounder(WageDag2, "Exper", "Educ", "Wage"),
"Confounder",
""
)
))
ggdag_collider(WageDag2) + theme_dag(legend.position = 'none') + geom_dag_label_repel(aes(label = label))
WageDag3 <-
tidy_dagitty(
dagify(
Wage ~ Educ + Exper + Ability,
Exper ~~ Educ,
Educ ~ Ability + Z
exposure = "Educ",
install.packages("cardx")
library(shiny)
detach("package:shiny", unload = TRUE)
library(shiny)
library(tidyverse)
library(broom)
install.packages(c("admisc", "AsioHeaders", "bigD", "bit", "bit64", "bookdown", "broom", "broom.helpers", "bslib", "chk", "class", "classInt", "cli", "clock", "cluster", "collapse", "commonmark", "countrycode", "cpp11", "curl", "data.table", "datawizard", "diffobj", "doBy", "doRNG", "DoubleML", "estimatr", "evaluate", "foreign", "fs", "future", "gert", "ggplot2", "gifski", "globals", "graphlayouts", "gt", "gtsummary", "Hmisc", "httpuv", "httr2", "igraph", "insight", "jsonlite", "KernSmooth", "knitr", "labelled", "later", "lattice", "lintr", "lme4", "marginaleffects", "markdown", "MASS", "MatchIt", "Matrix", "MatrixModels", "mgcv", "mime", "miniUI", "mlbench", "mlr3", "mlr3learners", "mlr3pipelines", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "pagedown", "pak", "parallelly", "parameters", "pillar", "pkgbuild", "plm", "processx", "PRROC", "ps", "purrr", "quantreg", "R.utils", "R6", "ragg", "Rcpp", "RcppArmadillo", "Rdpack", "readxl", "recipes", "renv", "rgl", "RJSDMX", "rlang", "rpart", "rsconnect", "sass", "sessioninfo", "sf", "sparsevctrs", "spatial", "stringi", "systemfonts", "testthat", "textshaping", "TH.data", "tinytable", "tinytex", "tzdb", "units", "V8", "VGAM", "WDI", "websocket", "xfun", "xgboost", "xml2", "zip", "zoo"))
library(xfun)
detach("package:xfun", unload = TRUE)
install.packages(c("broom", "cli", "curl", "ggplot2", "graphlayouts", "httpuv", "igraph", "jsonlite", "later", "MASS", "mime", "processx", "ps", "purrr", "Rcpp", "rlang", "stringi", "tzdb", "V8", "xfun", "xml2"))
install.packages(c("broom", "cli", "curl", "ggplot2", "graphlayouts", "httpuv", "igraph", "jsonlite", "later", "MASS", "mime", "processx", "ps", "purrr", "Rcpp", "rlang", "stringi", "tzdb", "V8", "xfun", "xml2"))
install.packages(c("cli", "httpuv", "igraph", "jsonlite", "later", "mime", "processx", "ps", "purrr", "Rcpp", "rlang", "stringi", "xml2"))
install.packages(c("jsonlite", "rlang", "stringi", "xml2"))
install.packages(c("cli", "jsonlite", "processx", "ps", "rlang", "stringi", "xml2"))
.libPaths()
install.packages(c("broom.helpers", "cli", "jsonlite", "processx", "ps", "rlang", "scales", "stringi", "xml2"))
install.packages(c("cli", "jsonlite", "rlang"))
=======
pak::pkg_install('bangecon/metricsToTheFace')
pak::pkg_install('bangecon/metricsToTheFace')
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/jb0616165/OneDrive - sau.edu/Teaching/Econometrics/ClassNotes/8-1_Practice_Solutions.R", echo=TRUE)
nrow(ureglw$model)*summary(ureglw)$r.squared
source("C:/Users/jb0616165/OneDrive - sau.edu/Teaching/Econometrics/ClassNotes/8-1_Practice_Solutions.R", echo=TRUE)
nrow(ureglw$model)*summary(ureglw)$r.squared
nrow(ureg1w$model)*summary(ureg1w)$r.squared
source("C:/Users/jb0616165/OneDrive - sau.edu/Teaching/Econometrics/ClassNotes/8-1_Practice_Solutions.R", echo=TRUE)
source("C:/Users/jb0616165/OneDrive - sau.edu/Teaching/Econometrics/ClassNotes/8-1_Practice_Solutions.R", echo=TRUE)
bpF1
summary(bpF1)
bp1
source("C:/Users/jb0616165/OneDrive - sau.edu/Teaching/Econometrics/ClassNotes/8-1_Practice_Solutions.R", echo=TRUE)
source("C:/Users/jb0616165/OneDrive - sau.edu/Teaching/Econometrics/ClassNotes/8-1_Practice_Solutions.R", echo=TRUE)
source("C:/Users/jb0616165/OneDrive - sau.edu/Teaching/Econometrics/ClassNotes/8-1_Practice_Solutions.R", echo=TRUE)
load("C:/Users/jb0616165/OneDrive - sau.edu/Teaching/Econometrics/Institutions&Growth.RData")
View(Institutions_Growth)
library(wooldridge)
data("phillips")
names(phillips)
table(phillips$year)
data(fertil3)
table(fertil3$year)
data("airfare")
summary(airfare)
summary(lm(fare ~ dist + passen + bmktshare))
summary(lm(fare ~ dist + passen + bmktshare, data = airfare))
summary(lm(fare ~ dist + passen + bmktshr, data = airfare))
?airfare
head(airfare)
library(wooldridge)
data(nyse)
?adf.test
library(tseries)
install.packages(tseries)
install.packages('tseries')
library(tseries)
?adf.test
source("C:/Users/jb0616165/OneDrive - sau.edu/Teaching/Econometrics/URfIE-downloads/18/Example-18-4.R", echo=TRUE)
summary(inven)
library(dynlm)
library(tseries)
data(inven, package='wooldridge')
inven$y <- log(inven$gdp)
inven.ts<- ts(inven)
summary(dynlm( d(log(gdp)) ~ L(log(gdp)) + L(d(log(gdp))) + trend(inven.ts), data=inven.ts))
adf.test(inven$y, k=1)
adf.test(log(inven$gdp), k=1)
library(urca)
data(inven, package='wooldridge')
summary( ur.df(log(inven$gdp) , type = c("trend"), lags = 1) )
wooldridge::fertil3
data(wooldridge::fertil3)
fertil3 <- wooldridge::fertil3
summary(fertil3)
source("C:/Users/jb0616165/Downloads/Tutorial 2.5.R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/3.1 Tutorial (ECON-313).R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/3.1 Tutorial - Dalton Cusac.R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/Turorial 3.1.R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/3.1 Practice (ECON-313)).R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/3.1 Practice - Dalton Cusac.R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/Practice 3.1.R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/3.2 Tutorial (ECON-313).R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/3.2 Tutorial - Dalton Cusac.R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/Tutorial 3.2.R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/Tutorial 3.2.R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/3.2 Practice (ECON-313) (1).R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/3.2 Practice (ECON-313) (1).R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/3.2 Practice - Dalton Cusac.R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/Practice 3.2.R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/3.3 Tutorial (ECON-313).R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/3.3 Tutorial - Dalton Cusac.R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/Turorial 3.3.R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/Practice 3.3.R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/3.3 Practice - Dalton Cusac.R", echo=TRUE)
source("C:/Users/jb0616165/Downloads/3.3 Practice (ECON-313).R", echo=TRUE)
library(wooldridge)
?card
# Checking for relevance: reduced form
redf<-lm(educ ~ nearc4+exper+I(exper^2)+black+smsa+south+smsa66+reg662+
reg663+reg664+reg665+reg666+reg667+reg668+reg669, data=card)
summary(redf)
# OLS
ols<-lm(log(wage)~educ+exper+I(exper^2)+black+smsa+south+smsa66+reg662+
reg663+reg664+reg665+reg666+reg667+reg668+reg669, data=card)
2sls<-lm(log(wage)~redf$fitted.values+exper+I(exper^2)+black+smsa+south+smsa66+reg662+
tsls<-lm(log(wage)~redf$fitted.values+exper+I(exper^2)+black+smsa+south+smsa66+reg662+
reg663+reg664+reg665+reg666+reg667+reg668+reg669, data=card)
iv <-ivreg(log(wage)~educ+exper+I(exper^2)+black+smsa+south+smsa66+
reg662+reg663+reg664+reg665+reg666+reg667+reg668+reg669
| nearc4+exper+I(exper^2)+black+smsa+south+smsa66+
reg662+reg663+reg664+reg665+reg666+reg667+reg668+reg669
, data=card)
library(AER)
iv <-ivreg(log(wage)~educ+exper+I(exper^2)+black+smsa+south+smsa66+
reg662+reg663+reg664+reg665+reg666+reg667+reg668+reg669
| nearc4+exper+I(exper^2)+black+smsa+south+smsa66+
reg662+reg663+reg664+reg665+reg666+reg667+reg668+reg669
, data=card)
stargazer(redf,ols,tsls,iv,type="text",
keep=c("ed","near","exp","bl"),keep.stat=c("n","rsq"))
library(stargazer)
stargazer(redf,ols,tsls,iv,type="text",
keep=c("ed","near","exp","bl"),keep.stat=c("n","rsq"))
library(dynlm)
library(tseries)
library(urca)
data(fertil3, package='wooldridge')
fertil3.ts<- ts(fertil3)
summary( ur.df(fertil3.ts$gfr, type = c("trend"), lags = 1) )
library(urca)
data(inven, package='wooldridge')
summary( ur.df(log(inven$gdp) , type = c("trend"), lags = 1) )
library(dynlm)
library(tseries)
library(urca)
data(fertil3, package='wooldridge')
fertil3.ts<- ts(fertil3)
summary( ur.df(fertil3$gfr, type = c("trend"), lags = 1) )
summary( ur.df(fertil3$pe, type = c("trend"), lags = 1) )
library(dynlm)
library(tseries)
data(inven, package='wooldridge')
inven.ts<- ts(inven)
summary(dynlm( d(log(gdp)) ~ L(log(gdp)) + L(d(log(gdp))) + trend(inven.ts), data=inven.ts))
adf.test(log(inven$gdp), k=1)
library(urca)
data(inven, package='wooldridge')
summary( ur.df(log(inven$gdp) , type = c("trend"), lags = 1) )
summary( ur.df(diff(fertil3$gfr), type = c("trend"), lags = 1) )
summary( ur.df(fertil3$gfr, type = c("trend"), lags = 1) )
# Confirm that fertility and the tax exemption *contain* a unit root in their levels.
summary( ur.df(fertil3$gfr, type = c("trend"), lags = 1) )
summary( ur.df(fertil3$pe, type = c("trend"), lags = 1) )
# Confirm that the differences are stationary.
summary( ur.df(diff(fertil3$gfr), type = c("trend"), lags = 1) )
summary( ur.df(fertil3$pe, type = c("trend"), lags = 1) )
# Confirm that fertility and the tax exemption *contain* a unit root in their levels.
summary( ur.df(fertil3$gfr, type = c("trend"), lags = 1) )
summary( ur.df(fertil3$pe, type = c("trend"), lags = 1) )
# Confirm that the differences are stationary.
summary( ur.df(diff(fertil3$gfr), type = c("trend"), lags = 1) )
summary( ur.df(diff(fertil3$pe), type = c("trend"), lags = 1) )
# Estimate the static regression
fertil.lm0 <- dynlm(gfr ~ pe, data = fertil3)
# Test the residuals for stationarity
fertil.ca <- ur.df(fertil.lm0$residuals, type = c("trend"), lags = 1)
summary(fertil.ca)
# Estimate the static regression
fertil.lm0 <- dynlm(gfr ~ pe, data = fertil3)
# Test the residuals for stationarity
fertil.ca <- ur.df(fertil.lm0$residuals, type = c("none"), lags = 1)
summary(fertil.ca)
# Test the residuals for stationarity
fertil.ca <- ur.df(fertil.lm0$residuals, type = c("trend"), selectlags = "AIC")
summary(fertil.ca)
names(fertil3)
# Estimate the static regression
fertil.lm0 <- dynlm(gfr ~ year + pe, data = fertil3)
# Test the residuals for stationarity
fertil.ca <- ur.df(fertil.lm0$residuals, type = c("trend"), lags = 1)
summary(fertil.ca)
# Estimate the static regression
fertil.lm0 <- dynlm(gfr ~ year + pe, data = fertil3)
# Test the residuals for stationarity
fertil.ca <- ur.df(fertil.lm0$residuals, type = c("none"), lags = 1)
summary(fertil.ca)
library(plm);library(stargazer)
data(wagepan, package='wooldridge')
View(wagepan)
# Generate pdata.frame:
wagepan.p <- pdata.frame(wagepan, index=c("nr","year") )
View(wagepan.p)
View(wagepan)
View(wagepan)
View(wagepan.p)
>>>>>>> 2fa5457ca75a974a7f9646b44991336a41796509
