bwght.lm1$coefficients[,1]
bwght.lm1$coefficients
mapply(bwght.lm1$model, sd)
sapply(bwght.lm1$model, sd)
vapply(bwght.lm1$model, sd)
vapply(bwght.lm1$model, sd, FUN.VALUE = 'double')
vapply(bwght.lm1$model, sd, FUN.VALUE = 'complex')
sapply(bwght.lm1$model, sd, FUN.VALUE = 'complex')
sapply(bwght.lm1$model, sd)
bwght.lm1$coefficients[,1]*sapply(bwght.lm1$model, sd)
bwght.lm1$coefficients[,1]
bwght.lm1$coefficients
bwght.lm1$coefficients[-1]*sapply(bwght.lm1$model, sd)[-1]/sd(bwght.lm1$model$bwght)
lm(scale(bwght) ~ scale(cigs) + scale(faminc), data = bwght)
summary(lm(scale(bwght) ~ scale(cigs) + scale(faminc), data = bwght))
bwght.lm1$coefficients[-1]*sapply(bwght.lm1$model, sd)[-1]/sd(bwght.lm1$model$bwght)
bwght.lm2$coefficients[-1]*sapply(bwght.lm2$model, sd)[-1]/sd(bwght.lm2$model$bwght)
bwght.lm3$coefficients[-1]*sapply(bwght.lm3$model, sd)[-1]/sd(bwght.lm3$model$bwght)
attend <- wooldridge::attend
summary(attend)
attend.lm1 <- lm(stndfnl ~ atndrte + priGPA + ACT + I(priGPA^2) + I(ACT^2), data = attend)
attend.lm2 <- lm(stndfnl ~ atndrte*priGPA + ACT + I(priGPA^2) + I(ACT^2), data = attend)
stargazer(attend.lm1, attend.lm2, type = 'text')
attend.lm1$coefficients$atndrte
attend.lm1$coefficients
attend.lm1$coefficients['atndrte']
attend.lm2$coefficients['atndrte'] + attend.lm2$coefficients['atndrte']*mean(attend.lm1$model$priGPA)
attend.lm2$coefficients['atndrte'] + attend.lm2$coefficients['atndrte:priGPA']*mean(attend.lm1$model$priGPA)
attend.lm3 <- lm(stndfnl ~ atndrte + priGPA + ACT + I(priGPA^2) + I(ACT^2) + I(scale(atndrte, scale = FALSE)*scale(priGPA, scale = FALSE)), data = attend)
stargazer(attend.lm1, attend.lm2, typeattend.lm3, type = 'text')
attend.lm3 <- lm(stndfnl ~ atndrte + priGPA + ACT + I(priGPA^2) + I(ACT^2) + I(scale(atndrte, scale = FALSE)*scale(priGPA, scale = FALSE)), data = attend)
stargazer(attend.lm1, attend.lm2, attend.lm3, type = 'text')
AIC
summary(wage1)
wage.lm7 <- lm(wage ~ educ + exper + I(exper^2) + tenure + profocc + clerocc + servocc, data = wage1)
wage.lm9 <- lm(wage ~ educ + exper + I(exper^2) + tenure + occ, data = wage1)
stargazer(wage.lm7, wage.lm9, type = 'text')
wage1$occ <- factor(1 + wage1$profocc + 2*wage1$clerocc + 3*wage1$servocc, levels = c("Manufacturing", "Professional", "Clerical", "Services"))
wage.lm7 <- lm(wage ~ educ + exper + I(exper^2) + tenure + profocc + clerocc + servocc, data = wage1)
wage.lm9 <- lm(wage ~ educ + exper + I(exper^2) + tenure + occ, data = wage1)
stargazer(wage.lm7, wage.lm9, type = 'text')
summary(wage1.occ)
summary(wage1$occ)
wage1$occ <- factor(1 + wage1$profocc + 2*wage1$clerocc + 3*wage1$servocc, labels =  = c("Manufacturing", "Professional", "Clerical", "Services"))
wage1$occ <- factor(1 + wage1$profocc + 2*wage1$clerocc + 3*wage1$servocc, labels = c("Manufacturing", "Professional", "Clerical", "Services"))
summary(wage1$occ)
wage.lm7 <- lm(wage ~ educ + exper + I(exper^2) + tenure + profocc + clerocc + servocc, data = wage1)
wage.lm9 <- lm(wage ~ educ + exper + I(exper^2) + tenure + occ, data = wage1)
stargazer(wage.lm7, wage.lm9, type = 'text')
wage.lm9 <- lm(wage ~ educ + exper + I(exper^2) + tenure + female, data = wage1)
summary(wage.lm9)
summary(wage1)
wage.lm11 <- lm(wage ~ educ + exper + tenure + female*married, data = wage1)
summary(wage.lm11)
summary(lm(wage ~ female*married, data = wage1))
summary(lm(lwage ~ female*married, data = wage1))
wage2 <- wooldridge::wage2
summary(wage2)
summary(lm(lwage ~ female*married, data = wage2))
summary(lm(lwage ~ educ + exper + I(exper^2) + tenure + I(tenure^2) + female*married, data = wage2))
summary(lm(lwage ~ educ + exper + I(exper^2) + tenure + I(tenure^2) + female*married, data = wage1))
wage.lm11 <- lm(wage ~ educ + exper + tenure + female*married, data = wage1)
summary(wage.lm11)
wage.lm11 <- lm(wage ~ educ + exper + tenure + female*married, data = wage1)
wage.lm12 <- lm(log(wage) ~ educ + exper + tenure + female*married, data = wage1)
stargazer(wage.lm11, wage.lm12, type = 'text')
wage.lm13 <- lm(wage ~ female*educ + exper + tenure, data = wage1)
summary(wage.lm11)
wage.lm13 <- lm(wage ~ female*educ + exper + tenure, data = wage1)
summary(wage.lm13)
wage.lm13 <- lm(lwage ~ female*educ + exper + tenure, data = wage1)
summary(wage.lm13)
wage.lm13 <- lm(wage ~ female*educ + exper + tenure, data = wage1)
summary(wage.lm13)
wage.lm13 <- lm(wage ~ female*educ, data = wage1)
summary(wage.lm13)
wage.lm13 <- lm(lwage ~ female*educ, data = wage1)
summary(wage.lm13)
wage.lm13 <- lm(wage ~ female*educ + exper + tenure, data = wage1)
summary(wage.lm11)
wage.lm13 <- lm(wage ~ female*educ + exper + tenure, data = wage1)
summary(wage.lm13)
wage.lm13 <- lm(wage ~ female + educ + exper + tenure, data = wage1)
summary(wage.lm13)
wage.lm13 <- lm(wage ~ female*educ + exper + tenure, data = wage1)
summary(wage.lm13)
crime1 <- wooldridge::crime1
crime.lm1 <- lm(arr86 ~ pcnv + avgsen + tottime + ptime86 + qemp86, data = crime1)
summary(crime1)
crime1 <- wooldridge::crime1
crime.lm1 <- lm((arr86 > 0) ~ pcnv + avgsen + tottime + ptime86 + qemp86, data = crime1)
crime1 <- wooldridge::crime1
crime.lm1 <- lm((narr86 > 0) ~ pcnv + avgsen + tottime + ptime86 + qemp86, data = crime1)
summary(crime.lm1)
crime1 <- wooldridge::crime1
crime.lm1 <- lm((narr86 > 0) ~ pcnv + avgsen + ptime86 + qemp86, data = crime1)
summary(crime.lm1)
crime1 <- wooldridge::crime1
crime.lm1 <- lm((narr86 > 0) ~ pcnv + avgsen + tottime + ptime86 + qemp86, data = crime1)
summary(crime.lm1)
library(installr)
updater()
install.packages(c("broom", "circlize", "colorspace", "corrplot", "curl", "devtools", "dplyr", "gert", "GGally", "ggplot2", "ggsignif", "gtools", "insight", "lme4", "mime", "network", "networkDynamic", "openxlsx", "proxy", "psych", "quantreg", "ragg", "rbibutils", "rio", "rmarkdown", "statnet.common", "testthat", "textshaping", "wooldridge", "xfun"))
install.packages(c("broom", "circlize", "colorspace", "corrplot", "curl", "devtools", "dplyr", "gert", "GGally", "ggplot2", "ggsignif", "gtools", "insight", "lme4", "mime", "network", "networkDynamic", "openxlsx", "proxy", "psych", "quantreg", "ragg", "rbibutils", "rio", "rmarkdown", "statnet.common", "testthat", "textshaping", "wooldridge", "xfun"))
devtools::install_github('rstudio/learnr')
devtools::install_github('rstudio/gradethis')
library(learnr)
library(gradethis)
setwd("C:/Users/bange/Google Drive/Teaching/Econometrics/metricsToTheFace")
run_tutorial(Chapter01-1-Tutorial)
run_tutorial('Chapter01-1-Tutorial')
setwd("C:/Users/bange/Google Drive/Teaching/Econometrics")
devtools::install("metricsToTheFace")
library(metricsToTheFace)
run_tutorial('Chapter07-1-Tutorial', package = "metricsToTheFace")
devtools::install("metricsToTheFace")
setwd("C:/Users/bange/Google Drive/Teaching/Econometrics/metricsToTheFace")
devtools::document()
warnings()
setwd("C:/Users/bange/Google Drive/Teaching/Econometrics")
devtools::install("metricsToTheFace")
setwd("C:/Users/bange/Google Drive/Teaching/Econometrics/metricsToTheFace")
devtools::document()
devtools::document()
setwd("C:/Users/bange/Google Drive/Teaching/Econometrics")
devtools::install("metricsToTheFace")
setwd("C:/Users/bange/Google Drive/Teaching/Econometrics/metricsToTheFace")
devtools::document()
setwd("C:/Users/bange/Google Drive/Teaching/Econometrics")
devtools::install("metricsToTheFace")
devtools::install("metricsToTheFace")
library(metricsToTheFace)
run_tutorial("Chapter07-1-Tutorial", package = "metricsToTheFace")
setwd("C:/Users/bange/Google Drive/Teaching/Econometrics/metricsToTheFace")
devtools::document()
setwd("C:/Users/bange/Google Drive/Teaching/Econometrics")
devtools::install("metricsToTheFace")
library(metricsToTheFace)
run_tutorial("Chapter07-1-Tutorial", package = "metricsToTheFace")
setwd("C:/Users/bange/Google Drive/Teaching/Econometrics/metricsToTheFace")
devtools::document()
setwd("C:/Users/bange/Google Drive/Teaching/Econometrics")
devtools::install("metricsToTheFace")
library(metricsToTheFace)
run_tutorial("Chapter07-1-Tutorial", package = "metricsToTheFace")
setwd("C:/Users/bange/Google Drive/Teaching/Econometrics/metricsToTheFace")
devtools::document()
setwd("C:/Users/bange/Google Drive/Teaching/Econometrics")
devtools::install("metricsToTheFace")
library(metricsToTheFace)
run_tutorial("Chapter07-1-Tutorial", package = "metricsToTheFace")
wage1 <- wooldridge::wage1
wage1$occ <- factor(1 + wage1$profocc + 2*wage1$clerocc + 3*wage1$servocc, levels = c("Manufacturing",
"Professional", "Clerical", "Services"))
run_tutorial("Chapter06-1-Tutorial", package = "metricsToTheFace")
run_tutorial("Chapter06-2-Tutorial", package = "metricsToTheFace")
run_tutorial("Chapter04-2-Tutorial", package = "metricsToTheFace")
run_tutorial("Chapter04-1-Tutorial", package = "metricsToTheFace")
run_tutorial("Chapter07-1-Tutorial", package = "metricsToTheFace")
pbinom(1, 12, 0.2)
pbinom((0,12,0.2))
pbinom(0,12,0.2)
integrate((1/9)*x^2, 0, 3)
xf.x <- function(x) {(1/9)*x^3}
integrate(xf.x, 0, 3)
integrate(function(x) {(1/9)*x^2}, 0, 3)
summary(integrate(function(x) {(1/9)*x^2}, 0, 3))
xf.x <- function(x) {(1/9)*x^3}
x2f.x <- function(x) {(1/9)*x^4}
integrate(xf.x, 0, 3)
sqrt(integrate(x2f.x, 0, 3) - integrate(xf.x, 0, 3)$value^2)
integrate(xf.x, 0, 3)$value
integrate(xf.x, 0, 3)$value^2
sqrt(integrate(x2f.x, 0, 3)$value - integrate(xf.x, 0, 3)$value^2)
affairs <- wooldridge::affairs
summary(affairs)
library(corrgram)
corrgram(affairs[,which(names(affairs) %in% c('age', 'yrsmarr', 'educ', 'naffairs'))],
upper.panel = panel.cor,
lower.panel = panel.pts,
diag.panel = panel.density,
col.regions = colorRampPalette(c('black')))
set.seed(8675309)
xBar <- matrix(NA, nrow = 1000, ncol = 1000)
size <- c(1:1000)
for(i in 1:1000) {
for(j in 1:1000) {
xBar[j, i] = mean(rpois(n = size[i], lambda = 1))
}
}
plot(density(xBar[,2], xlim = c(-1, 3), ylim = c(0, 4)))
lines(density(xBar[,10]))
lines(density(xBar[,30]))
lines(density(xBar[,100]))
plot(density(xBar[,2], xlim = c(-1, 3), ylim = c(0, 4)))
lines(density(xBar[,10]))
lines(density(xBar[,30]))
lines(density(xBar[,100]))
plot(density(xBar[,2]), xlim = c(-1, 3), ylim = c(0, 4))
lines(density(xBar[,10]))
lines(density(xBar[,30]))
lines(density(xBar[,100]))
plot(density(xBar[,2]), xlim = c(-0.5, 2.5), ylim = c(0, 4))
lines(density(xBar[,10]))
lines(density(xBar[,30]))
lines(density(xBar[,100]))
X = rexp(n = size[10], lambda = 1)
u = rnorm(n = size[10], mean = 0, sd = 1)
Y = 2 - 0.5*X + u
b1 <- lm(Y ~ X, )$coefficients$X
X = rexp(n = size[10], rate = 1)
u = rnorm(n = size[10], mean = 0, sd = 1)
Y = 2 - 0.5*X + u
b1 <- lm(Y ~ X, )$coefficients$X
X = rexp(n = size[10], rate = 1)
u = rnorm(n = size[10], mean = 0, sd = 1)
Y = 2 - 0.5*X + u
b1 <- lm(Y ~ X, )$coefficients[2]
b1
set.seed(8675309)
X <- NULL
u <- NULL
Y <- NULL
size <- c(1:1000)
for(i in 1:1000) {
X = rexp(n = size[i], rate = 1)
u = rnorm(n = size[i], mean = 0, sd = 1)
Y = 2 - 0.5*X + u
b1 <- lm(Y ~ X)$coefficients[2]
}
plot(size, b1, type = 'l')
abline(h = 1, col = 'red')
length(size)
length(b1)
set.seed(8675309)
X <- NULL
u <- NULL
Y <- NULL
b1 <- NULL
size <- c(1:1000)
for(i in 1:1000) {
X = rexp(n = size[i], rate = 1)
u = rnorm(n = size[i], mean = 0, sd = 1)
Y = 2 - 0.5*X + u
b1[i] <- lm(Y ~ X)$coefficients[2]
}
plot(size, b1, type = 'l')
abline(h = 1, col = 'red')
set.seed(8675309)
X <- NULL
u <- NULL
Y <- NULL
b1 <- NULL
size <- c(1:1000)
for(i in 1:1000) {
X = rexp(n = size[i], rate = 1)
u = rnorm(n = size[i], mean = 0, sd = 1)
Y = 2 - 0.5*X + u
b1[i] <- lm(Y ~ X)$coefficients[2]
}
plot(size, b1, type = 'l')
abline(h = -0.5, col = 'red')
set.seed(8675309)
X <- NULL
u <- NULL
Y <- NULL
b1 <- matrix(NA, nrow = 1000, ncol = 1000)
size <- c(1:1000)
for(i in 1:1000) {
for(j in 1:1000) {
X <- rexp(n = size[i], rate = 1)
u <- rnorm(n = size[i], mean = 0, sd = 1)
Y = 2 - 0.5*X + u
b1[j, i] = lm(Y ~ X)$coefficients[2]
}
}
plot(density(b1[,2]), xlim = c(-1, 3), ylim = c(0, 4))
lines(density(b1[,10]))
lines(density(b1[,30]))
lines(density(b1[,100]))
set.seed(8675309)
xBar <- matrix(NA, nrow = 1000, ncol = 1000)
size <- c(1:1000)
for(i in 1:1000) {
for(j in 1:1000) {
xBar[j, i] = mean(rpois(n = size[i], lambda = 1))
}
}
plot(density(xBar[,2]), xlim = c(-1, 3), ylim = c(0, 4))
lines(density(xBar[,10]))
lines(density(xBar[,30]))
lines(density(xBar[,100]))
set.seed(8675309)
X <- NULL
u <- NULL
Y <- NULL
b1 <- matrix(NA, nrow = 1000, ncol = 1000)
size <- c(1:1000)
for(i in 1:1000) {
for(j in 1:1000) {
X <- rexp(n = size[i], rate = 1)
u <- rnorm(n = size[i], mean = 0, sd = 1)
Y = 2 - 0.5*X + u
b1[j, i] = lm(Y ~ X)$coefficients[2]
}
}
set.seed(8675309)
X <- NULL
u <- NULL
Y <- NULL
b1 <- matrix(NA, nrow = 1000, ncol = 1000)
size <- c(1:1000)
for(i in 1:1000) {
for(j in 1:1000) {
X <- rexp(n = size[i], rate = 1)
u <- rnorm(n = size[i], mean = 0, sd = 1)
Y = 2 - 0.5*X + u
b1[j, i] = lm(Y ~ X)$coefficients[2]
print(j)
}
print(i)
}
plot(density(b1[,2]), xlim = c(-1, 3), ylim = c(0, 4))
lines(density(b1[,10]))
lines(density(b1[,30]))
plot(density(b1[,2]), xlim = c(-2, 1), ylim = c(0, 4))
lines(density(b1[,10]))
lines(density(b1[,30]))
lines(density(b1[,100]))
abline(v = -0.5, col = )
abline(v = -0.5, col = 'red')
data(ceosal1, package='wooldridge')
# Usual OLS regression:
(reg1 <- lm( salary ~ roe, data=ceosal1))
# Regression without intercept (through origin):
(reg2 <- lm( salary ~ 0 + roe, data=ceosal1))
# Regression without slope (on a constant):
(reg3 <- lm( salary ~ 1 , data=ceosal1))
# average y:
mean(ceosal1$salary)
# Scatter Plot with all 3 regression lines
plot(ceosal1$roe, ceosal1$salary, ylim=c(0,4000))
abline(reg1, lwd=2, lty=1)
abline(reg2, lwd=2, lty=2)
abline(reg3, lwd=2, lty=3)
# Set the random seed
set.seed(1234567)
source('C:/Users/bange/Google Drive/Teaching/Econometrics/URfIE-downloads/02/SLR-Sim-Model-Condx.R', echo=TRUE)
source('C:/Users/bange/Google Drive/Teaching/Econometrics/URfIE-downloads/02/SLR-Sim-Results.R', echo=TRUE)
legend("topleft",c("full","through origin","const only"),lwd=2,lty=1:3)
data(ceosal1, package='wooldridge')
# Usual OLS regression:
(reg1 <- lm( salary ~ roe, data=ceosal1))
# Regression without intercept (through origin):
(reg2 <- lm( salary ~ roe  - 1, data=ceosal1))
# Regression without slope (on a constant):
(reg3 <- lm( salary ~ 1 , data=ceosal1))
# average y:
mean(ceosal1$salary)
# Scatter Plot with all 3 regression lines
plot(ceosal1$roe, ceosal1$salary, ylim=c(0,4000))
abline(reg1, lwd=2, lty=1)
abline(reg2, lwd=2, lty=2)
abline(reg3, lwd=2, lty=3)
legend("topleft",c("full","through origin","const only"),lwd=2,lty=1:3)
k401k <- wooldridge::k401k
summary( lm(prate ~ mrate+age, data=d401k) )
summary( lm(prate ~ mrate+age, data=k401k) )
summary( lm(prate ~ age, data=k401k) )
summary( lm(prate ~ mrate, data=k401k) )
prate.u <- lm(prate ~ age, data = k401k)
prate.u$resprate.u <- lm(prate ~ age, data = k401k)$residuals
mrate.u <- lm(mrate ~ age, data = k401k)$residuals
plot(mrate.u, prate.u)
abline(lm(prate.u ~ mrate.u))
summary(k401k)
prate.u <- lm(prate ~ age, data = k401k)$residuals
mrate.u <- lm(mrate ~ age, data = k401k)$residuals
length(prate.u)
length(mrate.u)
plot(mrate.u, prate.u)
abline(lm(prate.u ~ mrate.u))
prate.lm1 <- lm(prate.u ~ mrate.u)
summary(prate.lm1)
abline(lm(prate ~ mrate, data = k401k))
plot(mrate.u, prate.u)
abline(prate.lm1)
abline(lm(prate ~ mrate, data = k401k))
lm(prate ~ mrate, data = k401k)
prate.u <- lm(prate ~ age, data = k401k)$residuals
mrate.u <- lm(mrate ~ age, data = k401k)$residuals
prate.lm1 <- lm(prate.u ~ mrate.u)
summary(prate.lm1)
plot(mrate.u, prate.u)
abline(prate.lm1)
abline(lm(prate ~ mrate, data = k401k), col = 'red')
n <- nrow(gpa1)
y <- gpa1$colGPA
X <- cbind(1, gpa1$hsGPA, gpa1$ACT)
k <- ncol(X) - 1
bhat <- solve( t(X)%*%X ) %*% t(X)%*%y
uhat <- y - X %*% bhat
sigsqhat <- as.numeric( t(uhat) %*% uhat / (n-k-1) )
SER <- sqrt(sigsqhat)
Vbetahat <- sigsqhat * solve( t(X)%*%X )
se <- sqrt( diag(Vbetahat) )
gpa1 <- wooldridge::gpa1
n <- nrow(gpa1)
y <- gpa1$colGPA
X <- cbind(1, gpa1$hsGPA, gpa1$ACT)
k <- ncol(X) - 1
bhat <- solve( t(X)%*%X ) %*% t(X)%*%y
uhat <- y - X %*% bhat
sigsqhat <- as.numeric( t(uhat) %*% uhat / (n-k-1) )
SER <- sqrt(sigsqhat)
Vbetahat <- sigsqhat * solve( t(X)%*%X )
se <- sqrt( diag(Vbetahat) )
se
bhat
summary(lm(colGPA~hsGPA+ACT, data = gpa1))
data(gpa1, package='wooldridge')
# Parameter estimates for full and simple model:
beta.hat <- coef( lm(colGPA ~ ACT+hsGPA, data=gpa1) )
beta.hat
# Relation between regressors:
delta.tilde <- coef( lm(hsGPA ~ ACT, data=gpa1) )
delta.tilde
# Omitted variables formula for beta1.tilde:
beta.hat["ACT"] + beta.hat["hsGPA"]*delta.tilde["ACT"]
# Actual regression with hsGPA omitted:
lm(colGPA ~ ACT, data=gpa1)
bwght <- wooldridge::bwght
summary(lm(log(cigs)~ log(cigprice) + log(faminc) + motheduc + white, data = bwght))
summary(bwght$cigs)
library(wooldridge)
data("smoke")
summary(smoke$cigs)
data(okun)
lm(unem ~ pcrgdp, data = okun)
summary(okun)
data(crime2)
summary(crime2)
summary(lm(log(crmrte) ~ log(lawexpc) + log(pcinc) + log(popden) + west + nrtheast + south, data = crime2))
summary(lm(crmrte ~ log(lawexpc) + log(pcinc) + log(popden) + west + nrtheast + south, data = crime2))
summary(lm(log(crmrte) ~ log(lawexpc) + log(pcinc) + log(popden) + west + nrtheast + south, data = crime2))
data("big9salary")
crime.lm1 <- lm(log(crmrte) ~ log(lawexpc) + log(pcinc) + log(popden) + west + nrtheast + south, data = crime1)
crime.lm1 <- lm(log(crmrte) ~ log(lawexpc) + log(pcinc) + log(popden) + west + nrtheast + south, data = crime2)
crime.lm1 <- lm(log(crmrte) ~ log(lawexpc) + log(pcinc) + log(popden) + west + nrtheast + south, data = crime1)
crime.lm1 <- lm(log(crmrte) ~ log(lawexpc) + log(pcinc) + log(popden) + west + nrtheast + south, data = crime2)
crime.lm1$df.residual
tc <- qt(1-0.05/2, crime.lm1$df.residual)
tc
confint(crime.lm1, level = 0.99)
?confint
confint(crime.lm1, "log(lawexpc)" level = 0.99)
confint(crime.lm1, `log(lawexpc)` level = 0.99)
confint(crime.lm1, "log(lawexpc)", level = 0.99)
crime.lm1 <- lm(log(crmrte) ~ log(lawexpc) + log(pcinc) + log(popden) + west + nrtheast + south, data = crime2)
crime.lmr <- lm(log(crmrte) ~ log(lawexpc) + log(pcinc) + log(popden), data = crime2)
crime.lm1$rank
r2.ur <- summary(crime.lm1)$r.squared
r2.r <- summary(crime.lmr)$r.squared
F <- (r2.ur-r2.r) / (1-r2.ur) * crime.lm1df$residual/crime.lm1df$rank
1-pf(F, crime.lm1df$rank, crime.lm1df$residual)
F <- (r2.ur-r2.r) / (1-r2.ur) * crime.lm1$df.residual/crime.lm1df$rank
F <- (r2.ur-r2.r) / (1-r2.ur) * crime.lm1$df.residual/crime.lm1$rank
1-pf(F, crime.lm1$rank, crime.lm1$df.residual)
library(metricsToTheFace)
?stargazer
library(stargazer)
?stargazer
data(hprice1)
hprice.lm3 <- lm(price ~ lotsize + sqrft + bdrms + I((sqrft-mean(sqr))*(bdrms-mean(bdrms))), data = hprice1)
hprice.lm3 <- lm(price ~ lotsize + sqrft + bdrms + I((sqrft-mean(sqrft))*(bdrms-mean(bdrms))), data = hprice1)
summary(hprice.lm3)
hprice.lm1 <- lm(price ~ lotsize + sqrft + bdrms, data = hprice1)
hprice.lm2 <- lm(price ~ lotsize + sqrft + bdrms + I(sqrft*bdrms), data = hprice1)
hprice.lm3 <- lm(price ~ lotsize + sqrft + bdrms + I((sqrft-mean(sqr))*(bdrms-mean(bdrms))), data = hprice1)
stargazer(hprice.lm1, hprice.lm2, hprice.lm3, type = 'text')
attend <- wooldridge::attend
attend.lm1 <- lm(stndfnl ~ atndrte + priGPA + ACT + I(priGPA^2) + I(ACT^2), data = attend)
attend.lm2 <- lm(stndfnl ~ atndrte*priGPA + ACT + I(priGPA^2) + I(ACT^2), data = attend)
attend.lm3 <- lm(stndfnl ~ atndrte + priGPA + ACT + I(priGPA^2) + I(ACT^2) + I(scale(atndrte, scale = FALSE)*scale(priGPA, scale = FALSE)), data = attend)
stargazer(attend.lm1, attend.lm2, attend.lm3, type = 'text')
data(gpa2)
summary(gpa2)
gpa2 <- wooldridge::gpa2
gpa.lm1 <- lm(gpa ~ athlete + female + I(1-white) + hsize + I(hsize^2) + hsperc + sat, data = gpa2)
gpa.lm2 <- lm(gpa ~ athlete + female + I(athlete*female) + I(1-white) + hsize + I(hsize^2) + hsperc + sat, data = gpa2)
gpa2 <- wooldridge::gpa2
colgpa.lm1 <- lm(colgpa ~ athlete + female + I(1-white) + hsize + I(hsize^2) + hsperc + sat, data = gpa2)
colgpa.lm2 <- lm(colgpa ~ athlete + female + I(athlete*female) + I(1-white) + hsize + I(hsize^2) + hsperc + sat, data = gpa2)
stargazer(colgpa.lm1, colgpa.lm2, type = 'text')
colgpa.lm1 <- lm(colgpa ~ athlete + female + I(1-white) + hsize + I(hsize^2) + hsperc + sat, data = gpa2)
colgpa.lm2 <- lm(colgpa ~ athlete + female + I(athlete*female) + I(1-white) + hsize + I(hsize^2) + hsperc + sat, data = gpa2)
colgpa.lm3 <- lm(colgpa ~ athlete + female + I(athlete*hsperc) + I(1-white) + hsize + I(hsize^2) + hsperc + sat, data = gpa2)
stargazer(colgpa.lm1, colgpa.lm2, colgpa.lm3, type = 'text')
colgpa.lm1 <- lm(colgpa ~ athlete + female + I(1-white) + hsize + I(hsize^2) + hsperc + sat, data = gpa2)
colgpa.lm2 <- lm(colgpa ~ athlete + female + I(athlete*female) + I(1-white) + hsize + I(hsize^2) + hsperc + sat, data = gpa2)
colgpa.lm3 <- lm(colgpa ~ athlete + female + I(athlete*scale(hsperc, scale = FALSE)) + I(1-white) + hsize + I(hsize^2) + hsperc + sat, data = gpa2)
stargazer(colgpa.lm1, colgpa.lm2, colgpa.lm3, type = 'text')
apple <- wooldridge::apple
apple.lm1 <- lm(ecobuy ~ ecoprc + regprc + faminc + hhsize + educ + age, data = apple)
summary(apple.lm1)
colnames(apple)
apple <- wooldridge::apple
apple.lm1 <- lm((ecolbs > 0) ~ ecoprc + regprc + faminc + hhsize + educ + age, data = apple)
summary(apple.lm1)
apple <- wooldridge::apple
apple.lm1 <- lm(I(ecolbs > 0) ~ ecoprc + regprc + faminc + hhsize + educ + age, data = apple)
summary(apple.lm1)
