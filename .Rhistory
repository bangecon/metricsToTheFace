#Step 5: Y de-meaned
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=0,time="5. Remove differences in Y explained by Z"),
#Step 6: Raw demeaned data only
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=NA,time=after_cor))
library(tidyverse)
library(ggthemes)
library(stargazer)
library(ggdag)
library(wooldridge)
df <- data.frame(Z = as.integer((1:200>100))) %>%
mutate(X =  .5   + 2*Z + rnorm(200)) %>%
mutate(Y = -.5*X + 4*Z + 1 + rnorm(200),time="1") %>%
group_by(Z) %>%
mutate(mean_X=mean(X),mean_Y=mean(Y)) %>%
ungroup()
#Calculate correlations
before_cor <- paste("1. Start with raw data. Correlation between X and Y: ",round(cor(df$X,df$Y),3),sep='')
after_cor <- paste("6. Analyze what's left! Correlation between X and Y controlling for Z: ",round(cor(df$X-df$mean_X,df$Y-df$mean_Y),3),sep='')
#Add step 2 in which X is demeaned, and 3 in which both X and Y are, and 4 which just changes label
dffull <- rbind(
#Step 1: Raw data only
df %>% mutate(mean_X=NA,mean_Y=NA,time=before_cor),
#Step 2: Add x-lines
df %>% mutate(mean_Y=NA,time='2. Figure out what differences in X are explained by Z'),
#Step 3: X de-meaned
df %>% mutate(X = X - mean_X,mean_X=0,mean_Y=NA,time="3. Remove differences in X explained by Z"),
#Step 4: Remove X lines, add Y
df %>% mutate(X = X - mean_X,mean_X=NA,time="4. Figure out what differences in Y are explained by Z"),
#Step 5: Y de-meaned
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=0,time="5. Remove differences in Y explained by Z"),
#Step 6: Raw demeaned data only
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=NA,time=after_cor))
ggplot(dffull,aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = 'The Relationship between Y and X, Controlling for a Binary Variable Z \n{next_state}', caption="Graph Code Credit: Nick Huntington-Klein, 'causalgraphs' https://github.com/NickCH-K/causalgraphs")
summary(df)
summary(dffull)
dim(df)
dim(dffull)
table(df$time)
table(dffull$time)
summary(dffull[, time == 1])
summary(dffull[, "time" == 1])
summary(subset(dffull, time == 1))
summary(subset(dffull, time == "1. Start with raw data. Correlation between X and Y: 0.333"))
library(ggpubr)
table(dffull$time)
values(dffull$time)
names(dffull$time)
class(dffull$time)
levels(dffull$time)
labels(dffull$time)
table(dffull$time)
names(table(dffull$time))
names(table(dffull$time))[1]
p1 <- ggplot(subset(dffull, time == names(table(dffull$time))[1]),
aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = 'The Relationship between Y and X, Controlling for a Binary Variable Z', caption="Graph Code Credit: Nick Huntington-Klein, 'causalgraphs' https://github.com/NickCH-K/causalgraphs")
p2 <- ggplot(subset(dffull, time == names(table(dffull$time))[2]),
aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = 'The Relationship between Y and X, Controlling for a Binary Variable Z', caption="Graph Code Credit: Nick Huntington-Klein, 'causalgraphs' https://github.com/NickCH-K/causalgraphs")
p1
p2
ggarrange(p1, p2)
tinytex::install_tinytex()
library(tinytex)
install_tinytex()
tinytex::inst
tinytex::install_tinytex()
library(wooldridge)
library(stargazer)
library(tidyverse)
library(ggthemes)
attend <- wooldridge::attend
attend.lm1 <- lm(stndfnl ~ atndrte + priGPA + ACT + I(priGPA^2) + I(ACT^2), data = attend)
attend.lm2 <- lm(stndfnl ~ atndrte + priGPA + ACT + I(priGPA^2) + I(ACT^2) + I(atndrte*priGPA), data = attend)
attend.lm3 <- lm(stndfnl ~ atndrte + priGPA + ACT + I(priGPA^2) + I(ACT^2) + I(scale(atndrte, scale = FALSE)*scale(priGPA, scale = FALSE)), data = attend)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
df <- data.frame(X = rnorm(200)+1,Y=rnorm(200)+1,time="1") %>%
mutate(C = as.integer(X+Y+rnorm(200)/2>2)) %>%
group_by(C) %>%
mutate(mean_X=mean(X),mean_Y=mean(Y)) %>%
ungroup()
before_cor <- paste("1. Start with raw data, ignoring C. Correlation between X and Y: ",round(cor(df$X,df$Y),3),sep='')
after_cor <- paste("7. Analyze what's left! Correlation between X and Y controlling for C: ",round(cor(df$X-df$mean_X,df$Y-df$mean_Y),3),sep='')
dffull <- rbind(
df %>% mutate(mean_X=NA,mean_Y=NA,C=0,time=before_cor),
df %>% mutate(mean_X=NA,mean_Y=NA,time='2. Separate data by the values of C.'),
df %>% mutate(mean_Y=NA,time='3. Figure out what differences in X are explained by C'),
df %>% mutate(X = X - mean_X,mean_X=0,mean_Y=NA,time="4. Remove differences in X explained by C"),
df %>% mutate(X = X - mean_X,mean_X=NA,time="5. Figure out what differences in Y are explained by C"),
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=0,time="6. Remove differences in Y explained by C"),
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=NA,time=after_cor))
p1 <- ggplot(subset(dffull, time == names(table(dffull$time))[1]),
aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[1])
p2 <- ggplot(subset(dffull, time == names(table(dffull$time))[2]),
aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[2])
p3 <- ggplot(subset(dffull, time == names(table(dffull$time))[3]),
aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[3])
p4 <- ggplot(subset(dffull, time == names(table(dffull$time))[4]),
aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[4])
p5 <- ggplot(subset(dffull, time == names(table(dffull$time))[5]),
aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[5])
p6 <- ggplot(subset(dffull, time == names(table(dffull$time))[6]),
aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[6])
ggarrange(p1, p2, p3, p4, p5, p6, nrow = 2, ncol = 3)
library(wooldridge)
library(stargazer)
library(tidyverse)
library(ggthemes)
library(ggpubr)
attend <- wooldridge::attend
attend.lm1 <- lm(stndfnl ~ atndrte + priGPA + ACT + I(priGPA^2) + I(ACT^2), data = attend)
attend.lm2 <- lm(stndfnl ~ atndrte + priGPA + ACT + I(priGPA^2) + I(ACT^2) + I(atndrte*priGPA), data = attend)
attend.lm3 <- lm(stndfnl ~ atndrte + priGPA + ACT + I(priGPA^2) + I(ACT^2) + I(scale(atndrte, scale = FALSE)*scale(priGPA, scale = FALSE)), data = attend)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
df <- data.frame(X = rnorm(200)+1,Y=rnorm(200)+1,time="1") %>%
mutate(C = as.integer(X+Y+rnorm(200)/2>2)) %>%
group_by(C) %>%
mutate(mean_X=mean(X),mean_Y=mean(Y)) %>%
ungroup()
before_cor <- paste("1. Start with raw data, ignoring C. Correlation between X and Y: ",round(cor(df$X,df$Y),3),sep='')
after_cor <- paste("7. Analyze what's left! Correlation between X and Y controlling for C: ",round(cor(df$X-df$mean_X,df$Y-df$mean_Y),3),sep='')
dffull <- rbind(
df %>% mutate(mean_X=NA,mean_Y=NA,C=0,time=before_cor),
df %>% mutate(mean_X=NA,mean_Y=NA,time='2. Separate data by the values of C.'),
df %>% mutate(mean_Y=NA,time='3. Figure out what differences in X are explained by C'),
df %>% mutate(X = X - mean_X,mean_X=0,mean_Y=NA,time="4. Remove differences in X explained by C"),
df %>% mutate(X = X - mean_X,mean_X=NA,time="5. Figure out what differences in Y are explained by C"),
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=0,time="6. Remove differences in Y explained by C"),
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=NA,time=after_cor))
p1 <- ggplot(subset(dffull, time == names(table(dffull$time))[1]),
aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[1])
p2 <- ggplot(subset(dffull, time == names(table(dffull$time))[2]),
aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[2])
p3 <- ggplot(subset(dffull, time == names(table(dffull$time))[3]),
aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[3])
p4 <- ggplot(subset(dffull, time == names(table(dffull$time))[4]),
aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[4])
p5 <- ggplot(subset(dffull, time == names(table(dffull$time))[5]),
aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[5])
p6 <- ggplot(subset(dffull, time == names(table(dffull$time))[6]),
aes(y=Y,x=X,color=as.factor(Z)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(Z)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(Z)), na.rm = TRUE)+
guides(color=guide_legend(title="Z"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[6])
ggarrange(p1, p2, p3, p4, p5, p6, nrow = 2, ncol = 3)
df <- data.frame(X = rnorm(200)+1,Y=rnorm(200)+1,time="1") %>%
mutate(C = as.integer(X+Y+rnorm(200)/2>2)) %>%
group_by(C) %>%
mutate(mean_X=mean(X),mean_Y=mean(Y)) %>%
ungroup()
before_cor <- paste("1. Start with raw data, ignoring C. Correlation between X and Y: ",round(cor(df$X,df$Y),3),sep='')
after_cor <- paste("7. Analyze what's left! Correlation between X and Y controlling for C: ",round(cor(df$X-df$mean_X,df$Y-df$mean_Y),3),sep='')
dffull <- rbind(
df %>% mutate(mean_X=NA,mean_Y=NA,C=0,time=before_cor),
df %>% mutate(mean_X=NA,mean_Y=NA,time='2. Separate data by the values of C.'),
df %>% mutate(mean_Y=NA,time='3. Figure out what differences in X are explained by C'),
df %>% mutate(X = X - mean_X,mean_X=0,mean_Y=NA,time="4. Remove differences in X explained by C"),
df %>% mutate(X = X - mean_X,mean_X=NA,time="5. Figure out what differences in Y are explained by C"),
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=0,time="6. Remove differences in Y explained by C"),
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=NA,time=after_cor))
p1 <- ggplot(subset(dffull, time == names(table(dffull$time))[1]),
aes(y=Y,x=X,color=as.factor(C)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(C)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(C)), na.rm = TRUE)+
guides(color=guide_legend(title="C"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[1])
p2 <- ggplot(subset(dffull, time == names(table(dffull$time))[2]),
aes(y=Y,x=X,color=as.factor(C)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(C)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(C)), na.rm = TRUE)+
guides(color=guide_legend(title="C"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[2])
p3 <- ggplot(subset(dffull, time == names(table(dffull$time))[3]),
aes(y=Y,x=X,color=as.factor(C)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(C)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(C)), na.rm = TRUE)+
guides(color=guide_legend(title="C"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[3])
p4 <- ggplot(subset(dffull, time == names(table(dffull$time))[4]),
aes(y=Y,x=X,color=as.factor(C)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(C)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(C)), na.rm = TRUE)+
guides(color=guide_legend(title="C"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[4])
p5 <- ggplot(subset(dffull, time == names(table(dffull$time))[5]),
aes(y=Y,x=X,color=as.factor(C)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(C)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(C)), na.rm = TRUE)+
guides(color=guide_legend(title="C"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[5])
p6 <- ggplot(subset(dffull, time == names(table(dffull$time))[6]),
aes(y=Y,x=X,color=as.factor(C)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(C)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(C)), na.rm = TRUE)+
guides(color=guide_legend(title="C"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[6])
ggarrange(p1, p2, p3, p4, p5, p6, nrow = 2, ncol = 3)
df <- data.frame(X = rnorm(200)+1,Y=rnorm(200)+1,time="1") %>%
mutate(C = as.integer(X+Y+rnorm(200)/2>2)) %>%
group_by(C) %>%
mutate(mean_X=mean(X),mean_Y=mean(Y)) %>%
ungroup()
before_cor <- paste("1. Start with raw data, ignoring C. Correlation between X and Y: ",round(cor(df$X,df$Y),3),sep='')
after_cor <- paste("7. Analyze what's left! Correlation between X and Y controlling for C: ",round(cor(df$X-df$mean_X,df$Y-df$mean_Y),3),sep='')
dffull <- rbind(
df %>% mutate(mean_X=NA,mean_Y=NA,C=0,time=before_cor),
df %>% mutate(mean_X=NA,mean_Y=NA,time='2. Separate data by the values of C.'),
df %>% mutate(mean_Y=NA,time='3. Figure out what differences in X are explained by C'),
df %>% mutate(X = X - mean_X,mean_X=0,mean_Y=NA,time="4. Remove differences in X explained by C"),
df %>% mutate(X = X - mean_X,mean_X=NA,time="5. Figure out what differences in Y are explained by C"),
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=0,time="6. Remove differences in Y explained by C"),
df %>% mutate(X = X - mean_X,Y = Y - mean_Y,mean_X=NA,mean_Y=NA,time=after_cor))
p1 <- ggplot(subset(dffull, time == names(table(dffull$time))[1]),
aes(y=Y,x=X,color=as.factor(C)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(C)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(C)), na.rm = TRUE)+
guides(color=guide_legend(title="C"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[1])
p2 <- ggplot(subset(dffull, time == names(table(dffull$time))[2]),
aes(y=Y,x=X,color=as.factor(C)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(C)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(C)), na.rm = TRUE)+
guides(color=guide_legend(title="C"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[2])
p3 <- ggplot(subset(dffull, time == names(table(dffull$time))[3]),
aes(y=Y,x=X,color=as.factor(C)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(C)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(C)), na.rm = TRUE)+
guides(color=guide_legend(title="C"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[3])
p4 <- ggplot(subset(dffull, time == names(table(dffull$time))[4]),
aes(y=Y,x=X,color=as.factor(C)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(C)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(C)), na.rm = TRUE)+
guides(color=guide_legend(title="C"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[4])
p5 <- ggplot(subset(dffull, time == names(table(dffull$time))[5]),
aes(y=Y,x=X,color=as.factor(C)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(C)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(C)), na.rm = TRUE)+
guides(color=guide_legend(title="C"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[5])
p6 <- ggplot(subset(dffull, time == names(table(dffull$time))[6]),
aes(y=Y,x=X,color=as.factor(C)))+geom_point()+
geom_vline(aes(xintercept=mean_X,color=as.factor(C)), na.rm = TRUE)+
geom_hline(aes(yintercept=mean_Y,color=as.factor(C)), na.rm = TRUE)+
guides(color=guide_legend(title="C"))+
scale_color_colorblind()+
labs(title = names(table(dffull$time))[6])
ggarrange(p1, p2, p3, p4, p5, p6, nrow = 2, ncol = 3)
plot(cars)
plot(cars)
summary(mtcars)
plot(cars)
summary(mtcars)
knitr::opts_chunk$set(echo = TRUE)
21+21
5*(4-1)^2-3
sqrt(1764)
head(mtcars, n = 5)
View(mtcars)
A <- matrix(a, ncol = 2)
a <- c(1,2,3,4,5,6)
b <- a+1
c <- a+b
d <- b+c
sqrt(d)
A <- matrix(a, ncol = 2)
A <- matrix(a, ncol = 2)
B <- cbind(A, A);
b <- B[, 3]
b
answer <- 21+21
life <- 5*(4-1)^2-3
universe <- sqrt(1764)
everything <- log(exp(42))
ls()
quadratic <- function(x, a, b, c) {
a*x^2 + b*x + c
}
quadratic(3, 8, -6, -12)
knitr::opts_chunk$set(echo = TRUE)
21+21
5*(4-1)^2-3
sqrt(1764)
answer <- 21+21
life <- 5*(4-1)^2-3
universe <- sqrt(1764)
everything <- log(exp(42))
ls()
quadratic <- function(x, a, b, c) {
a*x^2 + b*x + c
}
quadratic(3, 8, -6, -12)
a <- c(1,2,3,4,5,6)
b <- a+1
c <- a+b
d <- b+c
sqrt(d)
A <- matrix(a, ncol = 2)
A <- matrix(a, ncol = 2)
B <- cbind(A, A);
b <- B[, 3]
load("https://github.com/bangecon/metricsToTheFace/tree/master/inst/tutorials/Chapter01-1-Practice/BeerData.RData")
load("https://github.com/bangecon/metricsToTheFace/tree/master/inst/tutorials/Chapter01-1-Practice/BeerData.RData")
load("https://github.com/bangecon/metricsToTheFace/tree/master/inst/tutorials/Chapter01-1-Practice/BeerData.csv")
load("https://raw.githubusercontent.com/bangecon/metricsToTheFace/master/inst/tutorials/Chapter01-1-Practice/BeerData.csv")
load("https://raw.githubusercontent.com/bangecon/metricsToTheFace/master/inst/tutorials/Chapter01-1-Practice/BeerData.RData")
knitr::opts_chunk$set(echo = TRUE)
21+21
5*(4-1)^2-3
sqrt(1764)
answer <- 21+21
life <- 5*(4-1)^2-3
universe <- sqrt(1764)
everything <- log(exp(42))
ls()
quadratic <- function(x, a, b, c) {
a*x^2 + b*x + c
}
quadratic(3, 8, -6, -12)
a <- c(1,2,3,4,5,6)
b <- a+1
c <- a+b
d <- b+c
sqrt(d)
A <- matrix(a, ncol = 2)
A <- matrix(a, ncol = 2)
B <- cbind(A, A);
b <- B[, 3]
load("https://github.com/bangecon/metricsToTheFace/tree/master/inst/tutorials/Chapter01-1-Practice/BeerData.RData")
knitr::opts_chunk$set(echo = TRUE)
21+21
5*(4-1)^2-3
sqrt(1764)
answer <- 21+21
life <- 5*(4-1)^2-3
universe <- sqrt(1764)
everything <- log(exp(42))
ls()
quadratic <- function(x, a, b, c) {
a*x^2 + b*x + c
}
quadratic(3, 8, -6, -12)
a <- c(1,2,3,4,5,6)
b <- a+1
c <- a+b
d <- b+c
sqrt(d)
A <- matrix(a, ncol = 2)
A <- matrix(a, ncol = 2)
B <- cbind(A, A);
b <- B[, 3]
# load("https://github.com/bangecon/metricsToTheFace/tree/master/inst/tutorials/Chapter01-1-Practice/BeerData.RData")
# BeerDataCSV <- read.csv("https://github.com/bangecon/metricsToTheFace/tree/master/inst/tutorials/Chapter01-1-Practice/BeerData.csv")
head(mtcars, n = 5)
View(mtcars)
knitr::opts_chunk$set(echo = TRUE)
21+21
5*(4-1)^2-3
sqrt(1764)
answer <- 21+21
life <- 5*(4-1)^2-3
universe <- sqrt(1764)
everything <- log(exp(42))
ls()
quadratic <- function(x, a, b, c) {
a*x^2 + b*x + c
}
quadratic(3, 8, -6, -12)
a <- c(1,2,3,4,5,6)
b <- a+1
c <- a+b
d <- b+c
sqrt(d)
A <- matrix(a, ncol = 2)
A <- matrix(a, ncol = 2)
B <- cbind(A, A);
b <- B[, 3]
# load("https://github.com/bangecon/metricsToTheFace/tree/master/inst/tutorials/Chapter01-1-Practice/BeerData.RData")
# BeerDataCSV <- read.csv("https://github.com/bangecon/metricsToTheFace/tree/master/inst/tutorials/Chapter01-1-Practice/BeerData.csv")
head(mtcars, n = 5)
View(mtcars)
plot(cars)
Students <- c("Joseph", "Isaac", "Jack", "Darius", "Kalob", "William", "Jared", "Javier")
sample(Students, 1)
save.image("D:/Google Drive/Teaching/Econometrics/StudentList.RData")
library(learnr)
library(gradethis)
library(gtsummary)
library(corrgram)
ceosal1 <- wooldridge::ceosal1
affairs <- wooldridge::affairs
affairs$haskids <- factor(affairs$kids, labels = c("no","yes"))
affairs$marriage <- factor(affairs$ratemarr, labels = c("very unhappy","unhappy","average","happy", "very happy"))
gradethis::gradethis_setup()
knitr::opts_chunk$set(echo = FALSE)
A <- cbind(ceosal1$indus, ceosal1$finance, ceosal1$consprod, ceosal1$utility)
f <- c(1:ncol(A))
ceosal1$industry <- factor(A %*% f, labels = c('indus', 'finance', 'consprod', 'utility'))
summary(ceosal1$industry)
table(ceosal1$indus)
table(ceosal1$finance)
table(ceosal1$consprod)
table(ceosal1$utility)
ceosal1$industry <- factor(ceosal1$indus + 2*ceosal1$finance + 3*ceosal1$consprod + 4*ceosal1$utility, labels = c('indus', 'finance', 'consprod', 'utility'))
summary(ceosal1$industry)
dim(matrix(cbind(ceosal1$indus, ceosal1$finance, ceosal1$consprod, ceosal1$utility) ))
dim(cbind(ceosal1$indus, ceosal1$finance, ceosal1$consprod, ceosal1$utility) )
f <- c(1:ncol(A))
A <- cbind(ceosal1$indus, ceosal1$finance, ceosal1$consprod, ceosal1$utility)
table(A%*%f)
ceosal1$industry <- factor(ceosal1$indus + 2*ceosal1$finance + 3*ceosal1$consprod + 4*ceosal1$utility, labels = c('indus', 'finance', 'consprod', 'utility'))
summary(ceosal1$industry)
library(gtsummary)
?tbl_summary
ceosal1 <- wooldridge::ceosal1
affairs <- wooldridge::affairs
attach(ceosal1)
E_sal.roe <- mean(salary*roe)
E_sal.E_roe <- mean(salary)*mean(roe)
affairs$haskids <- factor(affairs$kids, labels = c("no","yes"))
affairs$marriage <- factor(affairs$ratemarr, labels = c("very unhappy","unhappy","average","happy", "very happy"))
prop.table(table(affairs$marriage,affairs$haskids))
class(prop.table(table(affairs$marriage,affairs$haskids)))
library(learnr)
library(gradethis)
attach(ceosal1)
E_sal.roe <- mean(salary*roe)
E_sal.E_roe <- mean(salary)*mean(roe)
E_sal.roe - E_sal.E_roe
