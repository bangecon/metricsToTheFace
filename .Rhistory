Y = 2 - 0.5*X + u
b1[i] <- lm(Y ~ X)$coefficients[2]
}
df <- data.frame(n = c(1:length(b1)), b1 = b1, v1 = (b1-(-0.5))^2)
ggplot() +
geom_line(data = df, aes(n, v1))
set.seed(8675309)
X <- NULL
u <- NULL
Y <- NULL
b1 <- NULL
for(i in 1:1000) {
X = rexp(n = i, rate = 1)
u = rnorm(n = i, mean = 0, sd = 1)
Y = 2 - 0.5*X + u
b1[i] <- lm(Y ~ X)$coefficients[2]
}
df <- data.frame(n = c(1:length(b1)), b1 = b1, v1 = (b1-(-0.5))^2)
p<- ggplot() +
geom_line(data = df, aes(n, v1))
class(p)
ggplot() +
geom_line(data = df, aes(n, v1)) +
xlab("Sample Size") +
ylab("Squared Deviation")
p <- ggplot() +
geom_line(data = df, aes(n, v1)) +
xlab("Sample Size") +
ylab("Squared Deviation")
summary(p)
p$labels
head(p$data)
p$data
p$layers
length(p)
p <- ggplot() +
geom_point(data = df, aes(n, v1)) +
xlab("Sample Size") +
ylab("Squared Deviation")
length(p)
p$coordinates
length(p$coordinates)
p$coordinates$range
p$coordinates$limits
p$facet
p$data
p$layers
length(p$layers)
p <- ggplot() +
geom_line(data = df, aes(n, v1)) +
xlab("Sample Size") +
ylab("Squared Deviation")
p$layers
p$scales
p$scales$n
p$mapping
p <- ggplot(data = df, aes(n, v1)) +
geom_line() +
xlab("Sample Size") +
ylab("Squared Deviation")
p
p$mapping
head(p$data)
length(p)
p <- geom_line(data = df, aes(n, v1)) +
xlab("Sample Size") +
ylab("Squared Deviation")
p <- geom_line(data = df, aes(n, v1))
p
length(p)
p <- ggplot() +
geom_line(data = df, aes(n, v1)) +
xlab("Sample Size") +
ylab("Squared Deviation")
p$facet
p$layers
p$layers[[1]]
length(p$layers[[1]])
head(p$layers[[1]]$data)
nrow(p$layers[[1]]$data)
grade_this({
if (!inherits(.result, c("gg", "ggplot"))) {
fail("Your class of your answer should be c('gg', 'ggplot').")
}
if (length(.result) != 9) {
if (length(.result) != 11) {
fail("Your table should have a length of 9 or 11.")
}
}
if (nrow(.reult$layers[[1]]$data) != 1000) {
if (nrow(.result$data) != 1000) {
fail("Your plot data should have 1000 rows.")
}
}
pass()
})
grade_this({
if (!inherits(.result, c("gg", "ggplot"))) {
fail("Your class of your answer should be c('gg', 'ggplot').")
}
if (length(.result) != 9) {
if (length(.result) != 11) {
fail("Your table should have a length of 9 or 11.")
}
}
if (nrow(.reult$layers[[1]]$data) != 1000) {
if (nrow(.result$data) != 1000) {
fail("Your plot data should have 1000 rows.")
}
}
pass()
})
p$layers
p[[2]]
p[[2]][[1]][[2]]
p[[2]][[1]]
p[[2]][[1]]$data
p[[2]][[1]][2]
class(p[[2]][[1]])
class(p[[2]][[1]]$data)
xBar <- matrix(NA, nrow = 1000, ncol = 100) |>
as.data.frame()
dim(xBar)
set.seed(8675309)
xBar <- matrix(NA, nrow = 1000, ncol = 100) |>
as.data.frame()
for(i in 1:100) {
for(j in 1:1000) {
xBar[j, i] = mean(rpois(n = i, lambda = 1))
}
}
ggplot(data = xBar) +
geom_density(aes(xBar[,2]))
length(ggplot(data = xBar) +
geom_density(aes(xBar[,2])))
library(ggplot2)
ggplot(data = xBar) +
geom_density(aes(xBar[,2]), ) +
geom_density(aes(xBar[,15])) +
geom_density(aes(xBar[,30])) +
geom_density(aes(xBar[,100])) +
xlab("xBar") +
ylab("Density")
ggplot(data = xBar) +
geom_density(aes(xBar[,2]), ) +
geom_density(aes(xBar[,15])) +
geom_density(aes(xBar[,30])) +
geom_density(aes(xBar[,100])) +
xlab("xBar") +
ylab("Density") +
xlim(-1, 3)
ggplot(data = xBar) +
geom_density(aes(xBar[,2]), ) +
geom_density(aes(xBar[,10])) +
geom_density(aes(xBar[,30])) +
geom_density(aes(xBar[,100])) +
xlab("xBar") +
ylab("Density") +
xlim(-1, 3)
ggplot() +
geom_density(aes(xBar[,2]), ) +
geom_density(aes(xBar[,10])) +
geom_density(aes(xBar[,30])) +
geom_density(aes(xBar[,100])) +
xlab("xBar") +
ylab("Density") +
xlim(-1, 3)
ggplot() +
geom_density(aes(xBar[,2]), ) +
geom_density(aes(xBar[,10])) +
geom_density(aes(xBar[,30])) +
geom_density(aes(xBar[,100])) +
xlab(expression("\bar{x}")) +
ylab("Density") +
xlim(-1, 3)
over(,'x')
ggplot() +
geom_density(aes(xBar[,2]), ) +
geom_density(aes(xBar[,10])) +
geom_density(aes(xBar[,30])) +
geom_density(aes(xBar[,100])) +
xlab(expression(over(,"x"))) +
ylab("Density") +
xlim(-1, 3)
ggplot() +
geom_density(aes(xBar[,2]), ) +
geom_density(aes(xBar[,10])) +
geom_density(aes(xBar[,30])) +
geom_density(aes(xBar[,100])) +
xlab(expression(over(x))) +
ylab("Density") +
xlim(-1, 3)
ggplot() +
geom_density(aes(xBar[,2]), ) +
geom_density(aes(xBar[,10])) +
geom_density(aes(xBar[,30])) +
geom_density(aes(xBar[,100])) +
xlab(expression(bar(x))) +
ylab("Density") +
xlim(-1, 3)
set.seed(8675309)
xBar <- NULL
for(i in 1:1000) {
xBar[i] = mean(rpois(n = i, lambda = 1))
}
ggplot() +
geom_line(aes((xBar-1)^2))
set.seed(8675309)
xBar <- NULL
for(i in 1:1000) {
xBar[i] = mean(rpois(n = i, lambda = 1))
}
xBar <- data.frame(n = c(1:length(xBar), xBar = xBar))
head(xBar)
dim(xBar)
xBar[1001:1005,]
set.seed(8675309)
xBar <- NULL
for(i in 1:1000) {
xBar[i] = mean(rpois(n = i, lambda = 1))
}
head(xBar)
class(xBar)
set.seed(8675309)
xBar <- NULL
for(i in 1:1000) {
xBar[i] = mean(rpois(n = i, lambda = 1))
}
xBar <- data.frame(n = 1:length(xBar), xBar = xBar))
set.seed(8675309)
xBar <- NULL
for(i in 1:1000) {
xBar[i] = mean(rpois(n = i, lambda = 1))
}
xBar <- data.frame(n = 1:length(xBar), xBar = xBar)
head(xBar)
set.seed(8675309)
xBar <- NULL
for(i in 1:1000) {
xBar[i] = mean(rpois(n = i, lambda = 1))
}
xBar <- data.frame(n = 1:length(xBar), xBar = xBar)
ggplot() +
geom_line(aes((xBar-1)^2))
ggplot() +
geom_line(data = xBar, aes((xBar-1)^2))
ggplot() +
geom_line(data = xBar, aes(n, (xBar-1)^2))
xBar <- data.frame(n = 1:length(xBar), xBar = xBar)
ggplot() +
geom_line(data = xBar, aes(n, (xBar-1)^2)) +
geom_hline(yintercept = 0, color = 'red')
xBar <- data.frame(n = 1:length(xBar), xBar = xBar)
set.seed(8675309)
xBar <- NULL
for(i in 1:1000) {
xBar[i] = mean(rpois(n = i, lambda = 1))
}
xBar <- data.frame(n = 1:length(xBar), xBar = xBar)
ggplot() +
geom_line(data = xBar, aes(n, (xBar-1)^2)) +
geom_hline(yintercept = 0, color = 'red')
ggplot(data = xBar) +
geom_line(aes(n, (xBar-1)^2)) +
geom_hline(yintercept = 0, color = 'red')
ggplot(data = xBar) +
geom_line(aes(n, (xBar-1)^2)) +
geom_hline(yintercept = 0, color = 'red') +
ylab(expression((bar(x)-\mu)^2)) +
ggplot(data = xBar) +
geom_line(aes(n, (xBar-1)^2)) +
geom_hline(yintercept = 0, color = 'red') +
ylab(expression((bar(x)-mu)^2)) +
xlab("Sample Size")
p <- ggplot(data = xBar) +
geom_line(aes(n, (xBar-1)^2)) +
geom_hline(yintercept = 0, color = 'red') +
ylab(expression((bar(x)-mu)^2)) +
xlab("Sample Size")
length(p)
library(learnr)
library(shiny)
library(tidyverse)
library(gradethis)
library(wooldridge)
wage1 <- wooldridge::wage1
wage.lm0 <- lm(wage ~ educ - 1, data = wage1)
wage.lm1 <- lm(wage ~ educ, data = wage1)
summary(wage.lm0)
class(summary(wage.lm0))
length(summary(wage.lm0))
summary(wage.lm0)
summary(wage.lm0)$coefficients
summary(wage.lm0)$coefficients$estimate
summary(wage.lm0)$coefficients[1]
summary(wage.lm1)$coefficients[1]
summary(wage.lm1)$coefficients
summary(wage.lm1)$coefficients[2]
ggplot(wage1) +
geom_point(aes(educ, wage)) +
geom_abline()
ggplot(wage1) +
geom_point(aes(educ, wage)) +
geom_smooth(formula = wage ~ educ) +
geom_smooth(formula = wage ~ educ - 1)
ggplot(wage1) +
geom_point(aes(educ, wage)) +
geom_smooth(formula = wage ~ educ) )
ggplot(wage1) +
geom_point(aes(educ, wage)) +
geom_smooth()
ggplot(wage1) +
geom_point(aes(educ, wage)) +
geom_smooth(aes(educ, wage))
ggplot(wage1) +
geom_point(aes(educ, wage), method = 'lm') +
geom_smooth(aes(educ, wage), method = 'lm', formula = wage ~ educ - 1)
ggplot(wage1) +
geom_point(aes(educ, wage), method = 'lm') +
geom_smooth(aes(educ, wage), method = 'lm', formula = y ~ x - 1)
ggplot(wage1) +
geom_point(aes(educ, wage), method = 'lm', se = FALSE) +
geom_smooth(aes(educ, wage), method = 'lm', formula = y ~ x - 1)
ggplot(wage1) +
geom_point(aes(educ, wage)) +
geom_smooth(aes(educ, wage), method = 'lm')
ggplot(wage1) +
geom_point(aes(educ, wage)) +
geom_smooth(aes(educ, wage), method = 'lm') +
geom_smooth(aes(educ, wage), method = 'lm', formula = y ~ 0 + x) +
xlab("Education") + ylab("Wage")
ggplot(wage1) +
geom_point(aes(educ, wage)) +
geom_smooth(aes(educ, wage), method = 'lm') +
geom_smooth(aes(educ, wage), method = 'lm', formula = y ~ 0 + x, color = 'red') +
xlab("Education") + ylab("Wage")
ggplot(wage1) +
geom_point(aes(educ, wage)) +
geom_smooth(aes(educ, wage), method = 'lm') +
geom_smooth(aes(educ, wage), method = 'lm', formula = y ~ 0 + x, color = 'red') +
xlab("Education") + ylab("Wage")
ggplot(wage1) +
geom_point(aes(educ, wage)) +
geom_smooth(aes(educ, wage), method = 'lm') +
geom_smooth(aes(educ, wage), method = 'lm', formula = y ~ 0 + x, color = 'red') +
xlab("Education") + ylab("Wage") -> p
length(p)
library(learnr)
library(gradethis)
library(wooldridge)
ceosal1 <- wooldridge::ceosal1
salary.lm1 <- lm(salary ~ roe, data = ceosal1)
salary.lm2 <- lm(salary ~ 0 + roe, data = ceosal1)
salary.lm3 <- lm(salary ~ 1, data = ceosal1)
salary.lm1 <- lm(salary ~ roe, data = ceosal1)
salary.lm2 <- lm(salary ~ roe - 1, data = ceosal1)
salary.lm3 <- lm(salary ~ 1, data = ceosal1)
summary(salary.lm1)
summary(salary.lm2)
summary(salary.lm3)
summary(salary.lm3)$coefficients[1]
summary(wage.lm1)$coefficients[2]
ggplot(wage1) +
geom_point(aes(educ, wage)) +
geom_smooth(formula = wage ~ educ) +
geom_smooth(formula = wage ~ educ - 1) +
xlab("Education") + ylab("Wage")
ggplot(wage1) +
geom_point(aes(educ, wage)) +
geom_smooth(aes(educ, wage), formula = y ~ x) +
geom_smooth(aes(educ, wage), formula = y ~ x - 1) +
xlab("Education") + ylab("Wage")
ggplot(wage1) +
geom_point(aes(educ, wage)) +
geom_smooth(aes(educ, wage), formula = y ~ x, method = 'lm') +
geom_smooth(aes(educ, wage), formula = y ~ x - 1, method = 'lm') +
xlab("Education") + ylab("Wage")
ggplot(wage1) +
geom_point(aes(educ, wage)) +
geom_smooth(aes(educ, wage), formula = y ~ x, method = 'lm') +
geom_smooth(aes(educ, wage), formula = y ~ x - 1, method = 'lm', color = 'red') +
xlab("Education") + ylab("Wage")
ggplot(ceosal1) +
geom_point(aes(roe, salary)) +
geom_smooth(aes(roe, salary), method = 'lm') +
geom_smooth(aes(roe, salary), method = 'lm', formula = y ~ x - 1) +
geom_smooth(aes(roe, salary), method = 'lm', formula = y ~ 1) +
xlab("Return on Equity") + ylab("Salary")
ggplot(ceosal1) +
geom_point(aes(roe, salary)) +
geom_smooth(aes(roe, salary), method = 'lm') +
geom_smooth(aes(roe, salary), method = 'lm', formula = y ~ x - 1) +
geom_smooth(aes(roe, salary), method = 'lm', formula = y ~ 1) +
xlab("Return on Equity") + ylab("Salary") + ylim(c(0,5000))
ggplot(ceosal1) +
geom_point(aes(roe, salary)) +
geom_smooth(aes(roe, salary), method = 'lm') +
geom_smooth(aes(roe, salary), method = 'lm', formula = y ~ x - 1, color = 'red') +
geom_smooth(aes(roe, salary), method = 'lm', formula = y ~ 1, color = 'green') +
xlab("Return on Equity") + ylab("Salary") + ylim(c(0,5000))
ggplot(ceosal1) +
geom_point(aes(roe, salary)) +
geom_smooth(aes(roe, salary), method = 'lm') +
geom_smooth(aes(roe, salary), method = 'lm', formula = y ~ x - 1, color = 'red') +
geom_smooth(aes(roe, salary), method = 'lm', formula = y ~ 1, color = 'darkgreen') +
xlab("Return on Equity") + ylab("Salary") + ylim(c(0,5000))
length(ggplot(ceosal1) +
geom_point(aes(roe, salary)) +
geom_smooth(aes(roe, salary), method = 'lm') +
geom_smooth(aes(roe, salary), method = 'lm', formula = y ~ x - 1, color = 'red') +
geom_smooth(aes(roe, salary), method = 'lm', formula = y ~ 1, color = 'darkgreen') +
xlab("Return on Equity") + ylab("Salary") + ylim(c(0,5000)))
ceosal1 <- wooldridge::ceosal1
ceosal.lm <- lm(log(salary) ~ log(sales), data = ceosal1)
ggplot(ceosal1) +
geom_point(aes(log(sales), log(salary)))
ggplot(ceosal1) +
geom_point(aes(log(sales), log(salary))) +
geom_smooth(aes(log(sales), log(salary)), formula = y ~ x, method = 'lm') +
xlab("ln(Sales)") + ylab("ln(Salary")
ggplot(ceosal1) +
geom_point(aes(log(sales), log(salary))) +
geom_smooth(aes(log(sales), log(salary)), formula = y ~ x, method = 'lm', se = FALSE) +
xlab("ln(Sales)") + ylab("ln(Salary")
ceosal.lm <- lm(log(salary) ~ log(sales), data = ceosal1)
summary(ceosal.lm)
summary(ceosal.lm)$coefficients[2]
wage1 <- wooldridge::wage1
wage.lm0 <- lm(wage ~ educ - 1, data = wage1)
wage.lm1 <- lm(wage ~ educ, data = wage1)
lwage.lm1 <- lm(log(wage) ~ educ, data = wage1)
summary(lwage.lm1)
lwage.lm1 <- lm(log(wage) ~ educ, data = wage1)
summary(lwage.lm1)$coefficients[2]
gpa1 <- wooldridge::gpa1
k401k <- wooldridge::k401k
GPA.lm1 <- lm(colGPA ~ ACT, data=gpa1)
GPA.lm2 <- lm(colGPA ~ hsGPA + ACT, data=gpa1)
stargazer(GPA.lm1, GPA.lm2, type = 'text')
library(stargazer)
GPA.lm1 <- lm(colGPA ~ ACT, data=gpa1)
GPA.lm2 <- lm(colGPA ~ hsGPA + ACT, data=gpa1)
stargazer(GPA.lm1, GPA.lm2, type = 'text')
GPA.lm1 <- lm(colGPA ~ ACT, data=gpa1)
GPA.lm2 <- lm(colGPA ~ hsGPA + ACT, data=gpa1)
class(stargazer(GPA.lm1, GPA.lm2, type = 'text'))
summary(stargazer(GPA.lm1, GPA.lm2, type = 'text'))
length(stargazer(GPA.lm1, GPA.lm2, type = 'text'))
stargazer(GPA.lm1, GPA.lm2, type = 'text')[1]
stargazer(GPA.lm1, GPA.lm2, type = 'text')[2]
stargazer(GPA.lm1, GPA.lm2, type = 'text')[3]
stargazer(GPA.lm1, GPA.lm2, type = 'text')[4]
stargazer(GPA.lm1, GPA.lm2, type = 'text')[24]
stargazer(GPA.lm1, GPA.lm2, type = 'text')[11]
length(stargazer(GPA.lm1, GPA.lm2, type = 'text')[11])
stargazer(GPA.lm1, GPA.lm2, type = 'text')[11]
prate.u <- lm(prate ~ age, data = k401k)$residuals
mrate.u <- lm(mrate ~ age, data = k401k)$residuals
prate.lm1 <- lm(prate.u ~ mrate.u)
summary(prate.lm1)
summary(prate.lm1)$coefficients[2]
summary(lm(prate ~ mrate + age, data = k401k))
rm(prate.u, mrate.u); prate.u <- residuals(lm(prate ~ age, data = k401k))
mrate.u <- residuals(lm(mrate ~ age, data = k401k))
prate.lm1 <- lm(prate.u ~ mrate.u)
summary(prate.lm1)
rm(prate.u, mrate.u); prate.u <- residuals(lm(prate ~ age, data = k401k))
mrate.u <- lm(mrate ~ age, data = k401k)|>
residuals()
prate.lm1 <- lm(prate.u ~ mrate.u)
summary(prate.lm1)
df <- data.frame(prate.u = residuals(lm(prate ~ age, data = k401k)),
mrate.u = residuals(lm(mrate ~ age, data = k401k)))
head(df)
ggplot(df) +
geom_point(aes(mrate.u, prate.u)) +
geom_smooth(aes(mrate.u, prate.u), method = 'lm', formula = y ~ x)
wage.lm1 <- lm(wage ~ educ, data = wage1)
wage.lm2 <- lm(wage ~ educ + exper, data = wage1)
summary(wage.lm1)
summary(wage.lm2)
summary(wage.lm2)$coefficients[2]
prate.u <- lm(prate ~ age, data = k401k)$residuals
mrate.u <- lm(mrate ~ age, data = k401k)$residuals
prate.lm1 <- lm(prate.u ~ mrate.u)
summary(prate.lm1)
stargazer(wage.lm1, wage.lm2, type = 'text')
stargazer(wage.lm1, wage.lm2, type = 'text')[11]
stargazer(wage.lm1, wage.lm2, type = 'text')[8]
stargazer(wage.lm1, wage.lm2, type = 'text')[8] == "educ                        0.541***                0.644***        "
length(stargazer(wage.lm1, wage.lm2, type = 'text'))
summary(wage2.lm2)
summary(wage.lm2)
wage.p <- lm(wage~exper, data = wage1)
educ.p <- lm(educ~exper, data = wage1)
summary(lm(wage.p$resid~educ.p$residuals))
summary(wage.lm2)
summary(lm(wage.p$resid~educ.p$residuals))$coefficients[2]
summary(wage.lm2)$coefficients[2]
gc()
library(learnr)
library(gradethis)
ceosal1 <- wooldridge::ceosal1
affairs <- wooldridge::affairs
attach(ceosal1)
E_sal.roe <- mean(salary*roe)
E_sal.E_roe <- mean(salary)*mean(roe)
affairs$haskids <- factor(affairs$kids, labels = c("no","yes"))
affairs$marriage <- factor(affairs$ratemarr, labels = c("very unhappy","unhappy","average","happy", "very happy"))
summary(affairs)
devtools::document()
run_tutorial("AppendixC-1-Practice", package = 'metricsToTheFace')
